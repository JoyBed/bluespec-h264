!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	src/block.c	/^static const int A[4][4] = {$/;"	v	file:
AC_next_state_LPS_64	src/biaridecod.c	/^const unsigned short AC_next_state_LPS_64[64] =$/;"	v
AC_next_state_MPS_64	src/biaridecod.c	/^const unsigned short AC_next_state_MPS_64[64] =$/;"	v
ALPHA_TABLE	src/loopFilter.c	/^static const byte ALPHA_TABLE[52]  = {0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,4,4,5,6,  7,8,9,10,12,13,15,17,  20,22,25,28,32,36,40,45,  50,56,63,71,80,90,101,113,  127,144,162,182,203,226,255,255} ;$/;"	v	file:
ANY_INTRA	src/loopFilter.c	212;"	d	file:
AbsFrameNum	inc/global.h	/^  unsigned int AbsFrameNum;$/;"	m	struct:img_par
AllocNALU	src/nalucommon.c	/^NALU_t *AllocNALU(int buffersize)$/;"	f
AllocPPS	src/parsetcommon.c	/^pic_parameter_set_rbsp_t *AllocPPS ()$/;"	f
AllocPartition	src/ldecod.c	/^DataPartition *AllocPartition(int n)$/;"	f
AllocSPS	src/parsetcommon.c	/^seq_parameter_set_rbsp_t *AllocSPS ()$/;"	f
AssignQuantParam	src/block.c	/^void AssignQuantParam(pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps)$/;"	f
BETA_TABLE	src/loopFilter.c	/^static const byte  BETA_TABLE[52]  = {0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,2,2,2,3,  3,3,3, 4, 4, 4, 6, 6,   7, 7, 8, 8, 9, 9,10,10,  11,11,12,12,13,13, 14, 14,   15, 15, 16, 16, 17, 17, 18, 18} ;$/;"	v	file:
BIARI_CTX_INIT1	src/context_ini.c	33;"	d	file:
BIARI_CTX_INIT2	src/context_ini.c	24;"	d	file:
BITS_CBP_MB	inc/global.h	/^  BITS_CBP_MB,$/;"	e	enum:__anon7
BITS_COEFF_UV_MB	inc/global.h	/^  BITS_COEFF_UV_MB,$/;"	e	enum:__anon7
BITS_COEFF_Y_MB	inc/global.h	/^  BITS_COEFF_Y_MB,$/;"	e	enum:__anon7
BITS_HEADER_MB	inc/global.h	/^  BITS_HEADER_MB,$/;"	e	enum:__anon7
BITS_INTER_MB	inc/global.h	/^  BITS_INTER_MB,$/;"	e	enum:__anon7
BITS_TOTAL_MB	inc/global.h	/^  BITS_TOTAL_MB,$/;"	e	enum:__anon7
BIT_SET	src/cabac.c	1193;"	d	file:
BLOCK_MULTIPLE	inc/defines.h	103;"	d
BLOCK_SIZE	inc/defines.h	100;"	d
BLOCK_STEP	inc/macroblock.h	/^const int BLOCK_STEP[8][2]=$/;"	v
BOTTOM_FIELD	inc/global.h	/^  BOTTOM_FIELD$/;"	e	enum:__anon11
BType2CtxRef	src/macroblock.c	/^BType2CtxRef (int btype)$/;"	f
B_BITS	src/biaridecod.c	31;"	d	file:
B_SLICE	inc/global.h	/^  B_SLICE,$/;"	e	enum:__anon12
B_decoder	inc/global.h	/^  unsigned long B_decoder;                \/\/!< Decoder Buffer size in HRD model$/;"	m	struct:inp_par
Bframe_ctr	inc/global.h	/^int  Bframe_ctr;$/;"	v
BiContextType	inc/global.h	/^} BiContextType;$/;"	t	typeref:struct:__anon15
BiContextTypePtr	inc/global.h	/^typedef BiContextType *BiContextTypePtr;$/;"	t
BitCountType	inc/global.h	/^} BitCountType;$/;"	t	typeref:enum:__anon7
Bitstream	inc/global.h	/^} Bitstream;$/;"	t	typeref:struct:__anon18
Boolean	inc/parsetcommon.h	/^} Boolean;$/;"	t	typeref:enum:__anon21
Boolean	inc/parsetcommon.h	40;"	d
CABAC	inc/global.h	/^  CABAC$/;"	e	enum:__anon9
CALLBACK	inc/global.h	/^  CALLBACK,$/;"	e	enum:__anon8
CHROMA_AC	inc/defines.h	65;"	d
CHROMA_DC	inc/defines.h	64;"	d
CHROMA_DC_2x4	inc/defines.h	66;"	d
CHROMA_DC_4x4	inc/defines.h	67;"	d
CLIP_TAB	src/loopFilter.c	/^static const byte CLIP_TAB[52][5]  =$/;"	v	file:
COEFF_COST8x8	src/transform8x8.c	/^const byte COEFF_COST8x8[64] =$/;"	v
CONTEXT_INI_C	src/context_ini.c	16;"	d	file:
CTX_UNDEF	inc/ctx_tables.h	17;"	d
CTX_UNUSED	inc/ctx_tables.h	16;"	d
CalculateQuant8Param	src/macroblock.c	/^void CalculateQuant8Param()$/;"	f
CalculateQuantParam	src/block.c	/^void CalculateQuantParam()$/;"	f
CeilLog2	src/header.c	/^unsigned CeilLog2( unsigned uiVal)$/;"	f
CheckAvailabilityOfNeighbors	src/mb_access.c	/^void CheckAvailabilityOfNeighbors(void)$/;"	f
CheckAvailabilityOfNeighborsCABAC	src/cabac.c	/^void CheckAvailabilityOfNeighborsCABAC()$/;"	f
CheckZeroByteNonVCL	src/annexb.c	/^void CheckZeroByteNonVCL(NALU_t *nalu, int * ret)$/;"	f
CheckZeroByteVCL	src/annexb.c	/^void CheckZeroByteVCL(NALU_t *nalu, int * ret)$/;"	f
CleanUpPPS	src/parset.c	/^void CleanUpPPS()$/;"	f
CloseBitstreamFile	src/annexb.c	/^void CloseBitstreamFile()$/;"	f
CloseRTPFile	src/rtp.c	/^void CloseRTPFile()$/;"	f
Co_located	src/mbuffer.c	/^ColocatedParams *Co_located = NULL;$/;"	v
ColocatedParams	inc/mbuffer.h	/^} ColocatedParams;$/;"	t	typeref:struct:colocated_params
Component_Type	inc/global.h	/^} Component_Type;$/;"	t	typeref:enum:__anon13
Configure	src/ldecod.c	/^void Configure(int ac, char *av[])$/;"	f
CopyImgData	src/erc_do_p.c	/^void CopyImgData(imgpel **inputY, imgpel ***inputUV, imgpel **outputY,$/;"	f	file:
DATADECFILE	src/ldecod.c	76;"	d	file:
DC_PRED	inc/defines.h	109;"	d
DC_PRED_16	inc/defines.h	120;"	d
DC_PRED_8	inc/defines.h	124;"	d
DECODE_COPY_MB	inc/defines.h	146;"	d
DECODE_MB	inc/defines.h	147;"	d
DECODING_OK	inc/defines.h	133;"	d
DEF_REGION_SIZE	inc/erc_api.h	35;"	d
DIAG_DOWN_LEFT_PRED	inc/defines.h	110;"	d
DIAG_DOWN_RIGHT_PRED	inc/defines.h	111;"	d
DQ_BITS	inc/block.h	23;"	d
DQ_BITS_8	src/transform8x8.c	24;"	d	file:
DUMP_DPB	inc/defines.h	28;"	d
DataPartition	inc/global.h	/^} DataPartition;$/;"	t	typeref:struct:datapartition
Dbits_to_go	inc/global.h	/^  int             Dbits_to_go;$/;"	m	struct:__anon14
Dbits_to_go	src/biaridecod.c	27;"	d	file:
Dbuffer	inc/global.h	/^  unsigned int    Dbuffer;$/;"	m	struct:__anon14
Dbuffer	src/biaridecod.c	26;"	d	file:
Dcodestrm	inc/global.h	/^  byte            *Dcodestrm;$/;"	m	struct:__anon14
Dcodestrm	src/biaridecod.c	28;"	d	file:
Dcodestrm_len	inc/global.h	/^  int             *Dcodestrm_len;$/;"	m	struct:__anon14
Dcodestrm_len	src/biaridecod.c	29;"	d	file:
DeblockCall	inc/global.h	/^  int DeblockCall;$/;"	m	struct:img_par
DeblockMb	src/loopFilter.c	/^void DeblockMb(ImageParameters *img, StorablePicture *p, int MbQAddr)$/;"	f
DeblockPicture	src/loopFilter.c	/^void DeblockPicture(ImageParameters *img, StorablePicture *p)$/;"	f
DecRefPicMarking_s	inc/global.h	/^typedef struct DecRefPicMarking_s$/;"	s
DecRefPicMarking_t	inc/global.h	/^} DecRefPicMarking_t;$/;"	t	typeref:struct:DecRefPicMarking_s
DecodedPictureBuffer	inc/mbuffer.h	/^} DecodedPictureBuffer;$/;"	t	typeref:struct:decoded_picture_buffer
DecodingEnvironment	inc/global.h	/^} DecodingEnvironment;$/;"	t	typeref:struct:__anon14
DecodingEnvironmentPtr	inc/global.h	/^typedef DecodingEnvironment *DecodingEnvironmentPtr;$/;"	t
DecomposeRTPpacket	src/rtp.c	/^int DecomposeRTPpacket (RTPpacket_t *p)$/;"	f
Dlow	inc/global.h	/^  unsigned int    Dlow, Drange;$/;"	m	struct:__anon14
Drange	inc/global.h	/^  unsigned int    Dlow, Drange;$/;"	m	struct:__anon14
DumpRTPHeader	src/rtp.c	/^void DumpRTPHeader (RTPpacket_t *p)$/;"	f
Dvalue	inc/global.h	/^  unsigned int    Dvalue;$/;"	m	struct:__anon14
EBSPtoRBSP	src/nal.c	/^int EBSPtoRBSP(byte *streamBuffer, int end_bytepos, int begin_bytepos)$/;"	f
EC_REQ	inc/elements.h	72;"	d
EC_SYNC	inc/elements.h	73;"	d
EOS	inc/defines.h	129;"	d
ERC_BLOCK_CONCEALED	inc/erc_api.h	38;"	d
ERC_BLOCK_CORRUPTED	inc/erc_api.h	39;"	d
ERC_BLOCK_EMPTY	inc/erc_api.h	40;"	d
ERC_BLOCK_OK	inc/erc_api.h	37;"	d
ET_SIZE	inc/global.h	75;"	d
EXT_VERSION	src/ldecod.c	73;"	d	file:
EdgeLoop	src/loopFilter.c	/^void EdgeLoop(imgpel** Img, byte Strength[16],struct img_par *img, int MbQAddr, int AlphaC0Offset, int BetaOffset,$/;"	f
Error_tracking	src/image.c	/^void Error_tracking()$/;"	f
ExpectedDeltaPerPicOrderCntCycle	inc/global.h	/^           int ExpectedDeltaPerPicOrderCntCycle;$/;"	m	struct:img_par
ExpectedPicOrderCnt	inc/global.h	/^    signed int ExpectedPicOrderCnt, PicOrderCntCycleCnt, FrameNumInPicOrderCntCycle;$/;"	m	struct:img_par
FALSE	inc/parsetcommon.h	/^  FALSE,$/;"	e	enum:__anon21
FIELD_SCAN	inc/macroblock.h	/^const byte FIELD_SCAN[16][2] =$/;"	v
FIELD_SCAN8x8	inc/macroblock.h	/^const byte FIELD_SCAN8x8[64][2] = {   \/\/ 8x8$/;"	v
FIELD_SCAN8x8	src/transform8x8.c	/^const byte FIELD_SCAN8x8[64][2] = {$/;"	v
FIXED_MB	inc/global.h	/^  FIXED_MB,$/;"	e	enum:__anon8
FIXED_RATE	inc/global.h	/^  FIXED_RATE,$/;"	e	enum:__anon8
FMO	inc/global.h	/^  FMO$/;"	e	enum:__anon8
FORMAT_OFF_T	inc/win32.h	56;"	d
FORMAT_OFF_T	inc/win32.h	62;"	d
FRAME	inc/global.h	/^  FRAME,$/;"	e	enum:__anon11
FREXT_HP	inc/defines.h	35;"	d
FREXT_Hi10P	inc/defines.h	36;"	d
FREXT_Hi422	inc/defines.h	37;"	d
FREXT_Hi444	inc/defines.h	38;"	d
F_decoder	inc/global.h	/^  unsigned long F_decoder;                \/\/!< Decoder Initial buffer fullness in HRD model$/;"	m	struct:inp_par
FileFormat	inc/global.h	/^  int FileFormat;                         \/\/!< File format of the Input file, PAR_OF_ANNEXB or PAR_OF_RTP$/;"	m	struct:inp_par
FindStartCode	src/annexb.c	/^static int FindStartCode (unsigned char *Buf, int zeros_in_startcode)$/;"	f	file:
FirstPartOfSliceHeader	src/header.c	/^int FirstPartOfSliceHeader()$/;"	f
FmoFinit	src/fmo.c	/^int FmoFinit()$/;"	f
FmoGenerateMapUnitToSliceGroupMap	src/fmo.c	/^static int FmoGenerateMapUnitToSliceGroupMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps)$/;"	f	file:
FmoGenerateMbToSliceGroupMap	src/fmo.c	/^static int FmoGenerateMbToSliceGroupMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps)$/;"	f	file:
FmoGenerateType0MapUnitMap	src/fmo.c	/^static void FmoGenerateType0MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType1MapUnitMap	src/fmo.c	/^static void FmoGenerateType1MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType2MapUnitMap	src/fmo.c	/^static void FmoGenerateType2MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType3MapUnitMap	src/fmo.c	/^static void FmoGenerateType3MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType4MapUnitMap	src/fmo.c	/^static void FmoGenerateType4MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType5MapUnitMap	src/fmo.c	/^static void FmoGenerateType5MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGenerateType6MapUnitMap	src/fmo.c	/^static void FmoGenerateType6MapUnitMap (pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps, unsigned PicSizeInMapUnits )$/;"	f	file:
FmoGetLastMBInSliceGroup	src/fmo.c	/^int FmoGetLastMBInSliceGroup (int SliceGroup)$/;"	f
FmoGetLastMBOfPicture	src/fmo.c	/^int FmoGetLastMBOfPicture()$/;"	f
FmoGetNextMBNr	src/fmo.c	/^int FmoGetNextMBNr (int CurrentMbNr)$/;"	f
FmoGetNumberOfSliceGroup	src/fmo.c	/^int FmoGetNumberOfSliceGroup()$/;"	f
FmoGetSliceGroupId	src/fmo.c	/^int FmoGetSliceGroupId (int mb)$/;"	f
FmoInit	src/fmo.c	/^int FmoInit(pic_parameter_set_rbsp_t* pps, seq_parameter_set_rbsp_t* sps)$/;"	f
FrameHeightInMbs	inc/global.h	/^  unsigned int FrameHeightInMbs;$/;"	m	struct:img_par
FrameNumInPicOrderCntCycle	inc/global.h	/^    signed int ExpectedPicOrderCnt, PicOrderCntCycleCnt, FrameNumInPicOrderCntCycle;$/;"	m	struct:img_par
FrameNumOffset	inc/global.h	/^  unsigned int PreviousFrameNum, FrameNumOffset;$/;"	m	struct:img_par
FrameSizeInMbs	inc/global.h	/^  unsigned int FrameSizeInMbs;$/;"	m	struct:img_par
FrameStore	inc/mbuffer.h	/^} FrameStore;$/;"	t	typeref:struct:frame_store
FreeNALU	src/nalucommon.c	/^void FreeNALU(NALU_t *n)$/;"	f
FreePPS	src/parsetcommon.c	/^ void FreePPS (pic_parameter_set_rbsp_t *pps)$/;"	f
FreePartition	src/ldecod.c	/^void FreePartition (DataPartition *dp, int n)$/;"	f
FreeSPS	src/parsetcommon.c	/^ void FreeSPS (seq_parameter_set_rbsp_t *sps)$/;"	f
GetAnnexbNALU	src/annexb.c	/^int GetAnnexbNALU (NALU_t *nalu)$/;"	f
GetBigDoubleWord	src/leaky_bucket.c	/^unsigned long GetBigDoubleWord(FILE *fp)$/;"	f
GetBits	src/vlc.c	/^int GetBits (byte buffer[],int totbitoffset,int *info, int bytecount,$/;"	f
GetRTPNALU	src/rtp.c	/^int GetRTPNALU (NALU_t *nalu)$/;"	f
GetStrength	src/loopFilter.c	/^void GetStrength(byte Strength[16],struct img_par *img,int MbQAddr,int dir,int edge, int mvlimit, StorablePicture *p)$/;"	f
GetVLCSymbol	src/vlc.c	/^int GetVLCSymbol (byte buffer[],int totbitoffset,int *info, int bytecount)$/;"	f
GetVLCSymbol_IntraMode	src/vlc.c	/^int GetVLCSymbol_IntraMode (byte buffer[],int totbitoffset,int *info, int bytecount)$/;"	f
H264PAYLOADTYPE	inc/rtp.h	18;"	d
H264SSRC	inc/rtp.h	19;"	d
HALF	src/biaridecod.c	32;"	d	file:
HOR_DOWN_PRED	inc/defines.h	113;"	d
HOR_PRED	inc/defines.h	108;"	d
HOR_PRED_16	inc/defines.h	119;"	d
HOR_PRED_8	inc/defines.h	125;"	d
HOR_UP_PRED	inc/defines.h	115;"	d
I16MB	inc/defines.h	77;"	d
I16OFFSET	src/macroblock.c	219;"	d	file:
I4MB	inc/defines.h	76;"	d
I8MB	inc/defines.h	80;"	d
IBLOCK	inc/defines.h	78;"	d
IDR_concealment_flag	inc/global.h	/^  int IDR_concealment_flag;$/;"	m	struct:img_par
INIT_ABS_I	inc/ctx_tables.h	/^static const int INIT_ABS_I[1][8][5][2] =$/;"	v
INIT_ABS_P	inc/ctx_tables.h	/^static const int INIT_ABS_P[3][8][5][2] =$/;"	v
INIT_B8_TYPE_I	inc/ctx_tables.h	/^static const int INIT_B8_TYPE_I[1][2][9][2] =$/;"	v
INIT_B8_TYPE_P	inc/ctx_tables.h	/^static const int INIT_B8_TYPE_P[3][2][9][2] =$/;"	v
INIT_BCBP_I	inc/ctx_tables.h	/^static const int INIT_BCBP_I[1][8][4][2] =$/;"	v
INIT_BCBP_P	inc/ctx_tables.h	/^static const int INIT_BCBP_P[3][8][4][2] =$/;"	v
INIT_CBP_I	inc/ctx_tables.h	/^static const int INIT_CBP_I[1][3][4][2] =$/;"	v
INIT_CBP_P	inc/ctx_tables.h	/^static const int INIT_CBP_P[3][3][4][2] =$/;"	v
INIT_CIPR_I	inc/ctx_tables.h	/^static const int INIT_CIPR_I[1][1][4][2] =$/;"	v
INIT_CIPR_P	inc/ctx_tables.h	/^static const int INIT_CIPR_P[3][1][4][2] =$/;"	v
INIT_DELTA_QP_I	inc/ctx_tables.h	/^static const int INIT_DELTA_QP_I[1][1][4][2]=$/;"	v
INIT_DELTA_QP_P	inc/ctx_tables.h	/^static const int INIT_DELTA_QP_P[3][1][4][2]=$/;"	v
INIT_FLD_LAST_I	inc/ctx_tables.h	/^static const int INIT_FLD_LAST_I[1][8][15][2] =$/;"	v
INIT_FLD_LAST_P	inc/ctx_tables.h	/^static const int INIT_FLD_LAST_P[3][8][15][2] =$/;"	v
INIT_FLD_MAP_I	inc/ctx_tables.h	/^static const int INIT_FLD_MAP_I[1][8][15][2] =$/;"	v
INIT_FLD_MAP_P	inc/ctx_tables.h	/^static const int INIT_FLD_MAP_P[3][8][15][2] =$/;"	v
INIT_IPR_I	inc/ctx_tables.h	/^static const int INIT_IPR_I[1][1][2][2] =$/;"	v
INIT_IPR_P	inc/ctx_tables.h	/^static const int INIT_IPR_P[3][1][2][2] =$/;"	v
INIT_LAST_I	inc/ctx_tables.h	/^static const int INIT_LAST_I[1][8][15][2] =$/;"	v
INIT_LAST_P	inc/ctx_tables.h	/^static const int INIT_LAST_P[3][8][15][2] =$/;"	v
INIT_MAP_I	inc/ctx_tables.h	/^static const int INIT_MAP_I[1][8][15][2] =$/;"	v
INIT_MAP_P	inc/ctx_tables.h	/^static const int INIT_MAP_P[3][8][15][2] =$/;"	v
INIT_MB_AFF_I	inc/ctx_tables.h	/^static const int INIT_MB_AFF_I[1][1][4][2] =$/;"	v
INIT_MB_AFF_P	inc/ctx_tables.h	/^static const int INIT_MB_AFF_P[3][1][4][2] =$/;"	v
INIT_MB_TYPE_I	inc/ctx_tables.h	/^static const int INIT_MB_TYPE_I[1][3][11][2] =$/;"	v
INIT_MB_TYPE_P	inc/ctx_tables.h	/^static const int INIT_MB_TYPE_P[3][3][11][2] =$/;"	v
INIT_MV_RES_I	inc/ctx_tables.h	/^static const int INIT_MV_RES_I[1][2][10][2] =$/;"	v
INIT_MV_RES_P	inc/ctx_tables.h	/^static const int INIT_MV_RES_P[3][2][10][2] =$/;"	v
INIT_ONE_I	inc/ctx_tables.h	/^static const int INIT_ONE_I[1][8][5][2] =$/;"	v
INIT_ONE_P	inc/ctx_tables.h	/^static const int INIT_ONE_P[3][8][5][2] =$/;"	v
INIT_REF_NO_I	inc/ctx_tables.h	/^static const int INIT_REF_NO_I[1][2][6][2] =$/;"	v
INIT_REF_NO_P	inc/ctx_tables.h	/^static const int INIT_REF_NO_P[3][2][6][2] =$/;"	v
INIT_TRANSFORM_SIZE_I	inc/ctx_tables.h	/^static const int INIT_TRANSFORM_SIZE_I[1][1][3][2]=$/;"	v
INIT_TRANSFORM_SIZE_P	inc/ctx_tables.h	/^static const int INIT_TRANSFORM_SIZE_P[3][1][3][2]=$/;"	v
INT64_MIN	inc/win32.h	58;"	d
INT64_MIN	inc/win32.h	64;"	d
INTER_MB	inc/global.h	/^  INTER_MB,$/;"	e	enum:__anon6
INTRA_MB_16x16	inc/global.h	/^  INTRA_MB_16x16$/;"	e	enum:__anon6
INTRA_MB_4x4	inc/global.h	/^  INTRA_MB_4x4,$/;"	e	enum:__anon6
INVALIDINDEX	inc/defines.h	139;"	d
IPCM	inc/defines.h	81;"	d
IS_CHROMA	inc/global.h	/^  IS_CHROMA = 1$/;"	e	enum:__anon13
IS_COPY	inc/defines.h	91;"	d
IS_DIRECT	inc/defines.h	90;"	d
IS_INTER	inc/defines.h	88;"	d
IS_INTERMV	inc/defines.h	89;"	d
IS_INTRA	inc/defines.h	84;"	d
IS_LUMA	inc/global.h	/^  IS_LUMA = 0,$/;"	e	enum:__anon13
IS_NEWINTRA	inc/defines.h	85;"	d
IS_OLDINTRA	inc/defines.h	86;"	d
IS_P8x8	inc/defines.h	92;"	d
I_SLICE	inc/global.h	/^  I_SLICE,$/;"	e	enum:__anon12
ImageParameters	inc/global.h	/^} ImageParameters;$/;"	t	typeref:struct:img_par
InitVUI	src/parset.c	/^void InitVUI(seq_parameter_set_rbsp_t *sps)$/;"	f
InterpretPPS	src/parset.c	/^int InterpretPPS (DataPartition *p, pic_parameter_set_rbsp_t *pps)$/;"	f
InterpretSEIMessage	src/sei.c	/^void InterpretSEIMessage(byte* msg, int size, ImageParameters *img)$/;"	f
InterpretSPS	src/parset.c	/^int InterpretSPS (DataPartition *p, seq_parameter_set_rbsp_t *sps)$/;"	f
IntraInterDecision	inc/global.h	/^} IntraInterDecision;$/;"	t	typeref:enum:__anon6
InvLevelScale4x4Chroma_Inter	inc/global.h	/^int  InvLevelScale4x4Chroma_Inter[2][6][4][4];$/;"	v
InvLevelScale4x4Chroma_Intra	inc/global.h	/^int  InvLevelScale4x4Chroma_Intra[2][6][4][4];$/;"	v
InvLevelScale4x4Luma_Inter	inc/global.h	/^int  InvLevelScale4x4Luma_Inter[6][4][4];$/;"	v
InvLevelScale4x4Luma_Intra	inc/global.h	/^int  InvLevelScale4x4Luma_Intra[6][4][4];$/;"	v
InvLevelScale8x8Luma_Inter	inc/global.h	/^int  InvLevelScale8x8Luma_Inter[6][8][8];$/;"	v
InvLevelScale8x8Luma_Intra	inc/global.h	/^int  InvLevelScale8x8Luma_Intra[6][8][8];$/;"	v
IsFirstByteStreamNALU	src/annexb.c	/^int IsFirstByteStreamNALU=1;$/;"	v
Is_primary_correct	inc/global.h	/^int Is_primary_correct;          \/\/!< if primary frame is correct, 0: incorrect$/;"	v
Is_redundant_correct	inc/global.h	/^int Is_redundant_correct;        \/\/!< if redundant frame is correct, 0:incorrect$/;"	v
JM	src/ldecod.c	71;"	d	file:
JMDecHelpExit	src/ldecod.c	/^void JMDecHelpExit ()$/;"	f
LEVRUN1	src/vlc.c	/^const byte LEVRUN1[16]=$/;"	v
LEVRUN3	src/vlc.c	/^const byte LEVRUN3[4] =$/;"	v
LFAlphaC0Offset	inc/global.h	/^  int                 LFAlphaC0Offset;  \/\/!< Alpha and C0 offset for filtering slice$/;"	m	struct:__anon19
LFAlphaC0Offset	inc/global.h	/^  int           LFAlphaC0Offset;$/;"	m	struct:macroblock
LFBetaOffset	inc/global.h	/^  int                 LFBetaOffset;     \/\/!< Beta offset for filtering slice$/;"	m	struct:__anon19
LFBetaOffset	inc/global.h	/^  int           LFBetaOffset;$/;"	m	struct:macroblock
LFDisableIdc	inc/global.h	/^  int                 LFDisableIdc;     \/\/!< Disable loop filter on slice$/;"	m	struct:__anon19
LFDisableIdc	inc/global.h	/^  int           LFDisableIdc;$/;"	m	struct:macroblock
LIST_0	inc/global.h	/^ LIST_0=0,$/;"	e	enum:__anon10
LIST_1	inc/global.h	/^ LIST_1=1$/;"	e	enum:__anon10
LOGFILE	src/ldecod.c	75;"	d	file:
LUMA	inc/defines.h	49;"	d
LUMA_16AC	inc/defines.h	59;"	d
LUMA_16DC	inc/defines.h	58;"	d
LUMA_4x4	inc/defines.h	63;"	d
LUMA_4x8	inc/defines.h	62;"	d
LUMA_8x4	inc/defines.h	61;"	d
LUMA_8x8	inc/defines.h	60;"	d
LUMA_INTRA16x16AC	inc/defines.h	51;"	d
LUMA_INTRA16x16DC	inc/defines.h	50;"	d
LastAccessUnitExists	src/annexb.c	/^int LastAccessUnitExists=0;$/;"	v
LeakyBucketParamFile	inc/global.h	/^  char LeakyBucketParamFile[100];         \/\/!< LeakyBucketParamFile$/;"	m	struct:inp_par
Lists	inc/global.h	/^} Lists;$/;"	t	typeref:enum:__anon10
LowPassForIntra8x8Pred	src/transform8x8.c	/^void LowPassForIntra8x8Pred(imgpel *PredPel, int block_up_left, int block_up, int block_left)$/;"	f
MAXIMUMPARSETNALUSIZE	inc/parsetcommon.h	32;"	d
MAXIMUMPARSETRBSPSIZE	inc/parsetcommon.h	31;"	d
MAXIMUMVALUEOFcpb_cnt	inc/parsetcommon.h	48;"	d
MAXMODE	inc/defines.h	82;"	d
MAXPARTITIONMODES	inc/elements.h	75;"	d
MAXPPS	inc/parsetcommon.h	36;"	d
MAXRBSPSIZE	inc/nalucommon.h	19;"	d
MAXRTPPACKETSIZE	inc/rtp.h	17;"	d
MAXRTPPAYLOADLEN	inc/rtp.h	16;"	d
MAXSPS	inc/parsetcommon.h	35;"	d
MAX_BITCOUNTER_MB	inc/global.h	/^  MAX_BITCOUNTER_MB$/;"	e	enum:__anon7
MAX_CODED_FRAME_SIZE	inc/defines.h	71;"	d
MAX_FN	inc/sei.h	41;"	d
MAX_LIST_SIZE	inc/mbuffer.h	25;"	d
MAX_LIST_SIZE	src/mbuffer.c	58;"	d	file:
MAX_NUM_SLICES	inc/defines.h	32;"	d
MAX_QP	inc/defines.h	98;"	d
MAX_REFERENCE_PICTURES	inc/defines.h	137;"	d
MAXnum_ref_frames_in_pic_order_cnt_cycle	inc/parsetcommon.h	152;"	d
MAXnum_slice_groups_minus1	inc/parsetcommon.h	104;"	d
MBNum2YBlock	inc/erc_api.h	65;"	d
MB_BLOCK_PIXELS	inc/defines.h	102;"	d
MB_BLOCK_SIZE	inc/defines.h	101;"	d
MBxy2YBlock	inc/erc_api.h	62;"	d
MIN_QP	inc/defines.h	97;"	d
MODE_IS_I4x4	src/macroblock.c	218;"	d	file:
MODE_IS_IPCM	src/macroblock.c	220;"	d	file:
MODE_IS_P8x8	src/macroblock.c	217;"	d	file:
MPS	inc/global.h	/^  unsigned char  MPS;           \/\/ Least Probable Symbol 0\/1 CP$/;"	m	struct:__anon15
MVPERMB_THR	inc/erc_api.h	32;"	d
MVPRED_L	inc/defines.h	142;"	d
MVPRED_MEDIAN	inc/defines.h	141;"	d
MVPRED_U	inc/defines.h	143;"	d
MVPRED_UR	inc/defines.h	144;"	d
Macroblock	inc/global.h	/^} Macroblock;$/;"	t	typeref:struct:macroblock
MakePPSavailable	src/parset.c	/^void MakePPSavailable (int id, pic_parameter_set_rbsp_t *pps)$/;"	f
MakeSPSavailable	src/parset.c	/^void MakeSPSavailable (int id, seq_parameter_set_rbsp_t *sps)$/;"	f
MapUnitToSliceGroupMap	src/fmo.c	/^int *MapUnitToSliceGroupMap = NULL;$/;"	v
MaxFrameNum	inc/global.h	/^  int MaxFrameNum;$/;"	m	struct:img_par
MbAffPostProc	src/image.c	/^void MbAffPostProc()$/;"	f
MbToSliceGroupMap	src/fmo.c	/^int *MbToSliceGroupMap = NULL;$/;"	v
MbaffFrameFlag	inc/global.h	/^  int MbaffFrameFlag;$/;"	m	struct:img_par
MbaffFrameFlag	inc/mbuffer.h	/^  int         MbaffFrameFlag;$/;"	m	struct:storable_picture
MotionInfoContexts	inc/global.h	/^} MotionInfoContexts;$/;"	t	typeref:struct:__anon16
NALUCount	src/annexb.c	/^int NALUCount=0;$/;"	v
NALU_PRIORITY_DISPOSABLE	inc/nalucommon.h	37;"	d
NALU_PRIORITY_HIGH	inc/nalucommon.h	35;"	d
NALU_PRIORITY_HIGHEST	inc/nalucommon.h	34;"	d
NALU_PRIRITY_LOW	inc/nalucommon.h	36;"	d
NALU_TYPE_AUD	inc/nalucommon.h	29;"	d
NALU_TYPE_DPA	inc/nalucommon.h	22;"	d
NALU_TYPE_DPB	inc/nalucommon.h	23;"	d
NALU_TYPE_DPC	inc/nalucommon.h	24;"	d
NALU_TYPE_EOSEQ	inc/nalucommon.h	30;"	d
NALU_TYPE_EOSTREAM	inc/nalucommon.h	31;"	d
NALU_TYPE_FILL	inc/nalucommon.h	32;"	d
NALU_TYPE_IDR	inc/nalucommon.h	25;"	d
NALU_TYPE_PPS	inc/nalucommon.h	28;"	d
NALU_TYPE_SEI	inc/nalucommon.h	26;"	d
NALU_TYPE_SLICE	inc/nalucommon.h	21;"	d
NALU_TYPE_SPS	inc/nalucommon.h	27;"	d
NALU_t	inc/nalucommon.h	/^} NALU_t;$/;"	t	typeref:struct:__anon20
NALUtoRBSP	src/nalu.c	/^int NALUtoRBSP (NALU_t *nalu)$/;"	f
NCBP	inc/macroblock.h	/^const unsigned char NCBP[2][48][2]=$/;"	v
NO_EC	inc/elements.h	71;"	d
NO_INTRA_PMODE	inc/defines.h	105;"	d
NO_SLICES	inc/global.h	/^  NO_SLICES,$/;"	e	enum:__anon8
NTAB1	src/vlc.c	/^const byte NTAB1[4][8][2] =$/;"	v
NTAB2	src/vlc.c	/^const byte NTAB2[4][8][2] =$/;"	v
NTAB3	src/vlc.c	/^const byte NTAB3[2][2][2] =$/;"	v
NUM_ABS_CTX	inc/global.h	244;"	d
NUM_B8_TYPE_CTX	inc/global.h	217;"	d
NUM_BCBP_CTX	inc/global.h	240;"	d
NUM_BLOCK_TYPES	inc/defines.h	68;"	d
NUM_CBP_CTX	inc/global.h	239;"	d
NUM_CIPR_CTX	inc/global.h	238;"	d
NUM_CTX_MODELS_I	inc/ctx_tables.h	22;"	d
NUM_CTX_MODELS_P	inc/ctx_tables.h	23;"	d
NUM_DELTA_QP_CTX	inc/global.h	220;"	d
NUM_IPR_CTX	inc/global.h	237;"	d
NUM_LAST_CTX	inc/global.h	242;"	d
NUM_MAP_CTX	inc/global.h	241;"	d
NUM_MB_AFF_CTX	inc/global.h	221;"	d
NUM_MB_TYPE_CTX	inc/global.h	216;"	d
NUM_MV_RES_CTX	inc/global.h	218;"	d
NUM_ONE_CTX	inc/global.h	243;"	d
NUM_REF_NO_CTX	inc/global.h	219;"	d
NUM_TRANSFORM_SIZE_CTX	inc/global.h	222;"	d
Next	inc/global.h	/^  struct DecRefPicMarking_s *Next;$/;"	m	struct:DecRefPicMarking_s	typeref:struct:DecRefPicMarking_s::DecRefPicMarking_s
NoMbPartLessThan8x8Flag	inc/global.h	/^  int           NoMbPartLessThan8x8Flag;$/;"	m	struct:macroblock
NumberOfSliceGroups	src/fmo.c	/^static int NumberOfSliceGroups;    \/\/ the number of slice groups -1 (0 == scan order, 7 == maximum)$/;"	v	file:
OPENFLAGS_READ	inc/win32.h	38;"	d
OPENFLAGS_READ	inc/win32.h	44;"	d
OPENFLAGS_WRITE	inc/win32.h	36;"	d
OPENFLAGS_WRITE	inc/win32.h	43;"	d
OPEN_PERMISSIONS	inc/win32.h	37;"	d
OPEN_PERMISSIONS	inc/win32.h	45;"	d
OUTSTRING_SIZE	src/ldecod.c	588;"	d	file:
OldSliceParams	inc/global.h	/^} OldSliceParams;$/;"	t	typeref:struct:old_slice_par
OpenBitstreamFile	src/annexb.c	/^void OpenBitstreamFile (char *fn)$/;"	f
OpenRTPFile	src/rtp.c	/^void OpenRTPFile (char *fn)$/;"	f
P8x8	inc/defines.h	75;"	d
PAR_DP_1	inc/global.h	/^  PAR_DP_1,    \/\/!< no data partitioning is supported$/;"	e	enum:__anon3
PAR_DP_3	inc/global.h	/^  PAR_DP_3,    \/\/!< data partitioning with 3 partitions$/;"	e	enum:__anon3
PAR_DP_TYPE	inc/global.h	/^} PAR_DP_TYPE;$/;"	t	typeref:enum:__anon3
PAR_OF_ANNEXB	inc/global.h	/^  PAR_OF_ANNEXB,   \/\/!< Current TML description$/;"	e	enum:__anon4
PAR_OF_RTP	inc/global.h	/^  PAR_OF_RTP       \/\/!< RTP Packet Output format$/;"	e	enum:__anon4
PAR_OF_TYPE	inc/global.h	/^} PAR_OF_TYPE;$/;"	t	typeref:enum:__anon4
PICTURE_DECODED	inc/defines.h	135;"	d
PLANE_16	inc/defines.h	121;"	d
PLANE_8	inc/defines.h	127;"	d
PPSConsistencyCheck	src/parset.c	/^void PPSConsistencyCheck (pic_parameter_set_rbsp_t *pps)$/;"	f
PRINT_BUFFERING_PERIOD_INFO	src/sei.c	1614;"	d	file:
PRINT_DEBLOCKING_FILTER_DISPLAY_PREFERENCE_INFO	src/sei.c	1438;"	d	file:
PRINT_DEC_REF_PIC_MARKING	src/sei.c	1036;"	d	file:
PRINT_FILLER_PAYLOAD_INFO	src/sei.c	716;"	d	file:
PRINT_FILM_GRAIN_CHARACTERISTICS_INFO	src/sei.c	1391;"	d	file:
PRINT_FULL_FRAME_FREEZE_INFO	src/sei.c	1064;"	d	file:
PRINT_FULL_FRAME_FREEZE_RELEASE_INFO	src/sei.c	1093;"	d	file:
PRINT_FULL_FRAME_SNAPSHOT_INFO	src/sei.c	1131;"	d	file:
PRINT_MOTION_CONST_SLICE_GROUP_SET_INFO	src/sei.c	1277;"	d	file:
PRINT_PAN_SCAN_RECT	src/sei.c	870;"	d	file:
PRINT_PCITURE_TIMING_INFO	src/sei.c	1823;"	d	file:
PRINT_PROGRESSIVE_REFINEMENT_END_INFO	src/sei.c	1210;"	d	file:
PRINT_PROGRESSIVE_REFINEMENT_START_INFO	src/sei.c	1171;"	d	file:
PRINT_RECOVERY_POINT	src/sei.c	920;"	d	file:
PRINT_RESERVED_INFO	src/sei.c	1534;"	d	file:
PRINT_SCENE_INFORMATION	src/sei.c	672;"	d	file:
PRINT_STEREO_VIDEO_INFO_INFO	src/sei.c	1499;"	d	file:
PRINT_SUBSEQUENCE_CHAR	src/sei.c	624;"	d	file:
PRINT_SUBSEQUENCE_INFO	src/sei.c	484;"	d	file:
PRINT_USER_DATA_REGISTERED_ITU_T_T35_INFO	src/sei.c	811;"	d	file:
PRINT_USER_DATA_UNREGISTERED_INFO	src/sei.c	765;"	d	file:
P_A	src/block.c	112;"	d	file:
P_A	src/transform8x8.c	205;"	d	file:
P_B	src/block.c	113;"	d	file:
P_B	src/transform8x8.c	206;"	d	file:
P_C	src/block.c	114;"	d	file:
P_C	src/transform8x8.c	207;"	d	file:
P_D	src/block.c	115;"	d	file:
P_D	src/transform8x8.c	208;"	d	file:
P_E	src/block.c	116;"	d	file:
P_E	src/transform8x8.c	209;"	d	file:
P_F	src/block.c	117;"	d	file:
P_F	src/transform8x8.c	210;"	d	file:
P_G	src/block.c	118;"	d	file:
P_G	src/transform8x8.c	211;"	d	file:
P_H	src/block.c	119;"	d	file:
P_H	src/transform8x8.c	212;"	d	file:
P_I	src/block.c	120;"	d	file:
P_I	src/transform8x8.c	213;"	d	file:
P_J	src/block.c	121;"	d	file:
P_J	src/transform8x8.c	214;"	d	file:
P_K	src/block.c	122;"	d	file:
P_K	src/transform8x8.c	215;"	d	file:
P_L	src/block.c	123;"	d	file:
P_L	src/transform8x8.c	216;"	d	file:
P_M	src/transform8x8.c	217;"	d	file:
P_N	src/transform8x8.c	218;"	d	file:
P_O	src/transform8x8.c	219;"	d	file:
P_P	src/transform8x8.c	220;"	d	file:
P_Q	src/transform8x8.c	221;"	d	file:
P_R	src/transform8x8.c	222;"	d	file:
P_S	src/transform8x8.c	223;"	d	file:
P_SLICE	inc/global.h	/^  P_SLICE = 0,$/;"	e	enum:__anon12
P_T	src/transform8x8.c	224;"	d	file:
P_U	src/transform8x8.c	225;"	d	file:
P_V	src/transform8x8.c	226;"	d	file:
P_W	src/transform8x8.c	227;"	d	file:
P_X	src/block.c	111;"	d	file:
P_X	src/transform8x8.c	228;"	d	file:
P_Z	src/transform8x8.c	204;"	d	file:
PartitionMode	src/nal_part.c	/^int PartitionMode;$/;"	v
PicHeightInMapUnits	inc/global.h	/^  unsigned int PicHeightInMapUnits;$/;"	m	struct:img_par
PicHeightInMbs	inc/global.h	/^  unsigned int PicHeightInMbs;$/;"	m	struct:img_par
PicOrderCntCycleCnt	inc/global.h	/^    signed int ExpectedPicOrderCnt, PicOrderCntCycleCnt, FrameNumInPicOrderCntCycle;$/;"	m	struct:img_par
PicOrderCntMsb	inc/global.h	/^    signed int PicOrderCntMsb;$/;"	m	struct:img_par
PicParSet	src/parset.c	/^pic_parameter_set_rbsp_t PicParSet[MAXPPS];$/;"	v
PicPos	inc/global.h	/^int **PicPos;$/;"	v
PicSizeInMbs	inc/global.h	/^  unsigned int PicSizeInMbs;$/;"	m	struct:img_par
PicSizeInMbs	inc/mbuffer.h	/^  unsigned    PicSizeInMbs;$/;"	m	struct:storable_picture
PicWidthInMbs	inc/global.h	/^  unsigned int PicWidthInMbs;$/;"	m	struct:img_par
PicWidthInMbs	inc/mbuffer.h	/^  unsigned    PicWidthInMbs;$/;"	m	struct:storable_picture
PictureStructure	inc/global.h	/^} PictureStructure;           \/\/!< New enum for field processing$/;"	t	typeref:enum:__anon11
PixelPos	inc/global.h	/^} PixelPos;$/;"	t	typeref:struct:pix_pos
PrevPicOrderCntLsb	inc/global.h	/^  unsigned int PrevPicOrderCntLsb;$/;"	m	struct:img_par
PrevPicOrderCntMsb	inc/global.h	/^    signed int PrevPicOrderCntMsb;$/;"	m	struct:img_par
PreviousFrameNum	inc/global.h	/^  unsigned int PreviousFrameNum, FrameNumOffset;$/;"	m	struct:img_par
PreviousFrameNumOffset	inc/global.h	/^           int PreviousFrameNumOffset;$/;"	m	struct:img_par
PreviousPOC	inc/global.h	/^           int PreviousPOC, ThisPOC;$/;"	m	struct:img_par
ProcessPPS	src/parset.c	/^void ProcessPPS (NALU_t *nalu)$/;"	f
ProcessSPS	src/parset.c	/^void ProcessSPS (NALU_t *nalu)$/;"	f
QP_SCALE_CR	inc/macroblock.h	/^const byte QP_SCALE_CR[52]=$/;"	v
QUARTER	src/biaridecod.c	33;"	d	file:
Q_BITS	src/block.c	28;"	d	file:
Q_BITS_8	src/transform8x8.c	23;"	d	file:
RBSPtoSODB	src/nal.c	/^int RBSPtoSODB(byte *streamBuffer, int last_byte_pos)$/;"	f
REGMODE_INTER_COPY	inc/erc_globals.h	24;"	d
REGMODE_INTER_COPY_8x8	inc/erc_globals.h	29;"	d
REGMODE_INTER_PRED	inc/erc_globals.h	25;"	d
REGMODE_INTER_PRED_8x8	inc/erc_globals.h	30;"	d
REGMODE_INTRA	inc/erc_globals.h	26;"	d
REGMODE_INTRA_8x8	inc/erc_globals.h	31;"	d
REGMODE_SPLITTED	inc/erc_globals.h	27;"	d
RSD	inc/ifunctions.h	/^static inline int RSD(int x)$/;"	f
RSD	inc/ifunctions.h	140;"	d
RTPReadPacket	src/rtp.c	/^int RTPReadPacket (RTPpacket_t *p, FILE *bits)$/;"	f
RTP_TR_TIMESTAMP_MULT	inc/rtp.h	20;"	d
RTPpacket_t	inc/rtp.h	/^} RTPpacket_t;$/;"	t	typeref:struct:__anon26
RUNBEFORE_NUM	inc/defines.h	54;"	d
R_decoder	inc/global.h	/^  unsigned long R_decoder;                \/\/!< Decoder Rate in HRD Model$/;"	m	struct:inp_par
ReMapRef	inc/global.h	/^int  ReMapRef[20];$/;"	v
ReadHRDParameters	src/parset.c	/^int ReadHRDParameters(DataPartition *p, hrd_parameters_t *hrd)$/;"	f
ReadVUI	src/parset.c	/^int ReadVUI(DataPartition *p, seq_parameter_set_rbsp_t *sps)$/;"	f
RestOfSliceHeader	src/header.c	/^int RestOfSliceHeader()$/;"	f
SCAN_YUV422	inc/macroblock.h	/^const byte SCAN_YUV422[8][2] =$/;"	v
SEARCH_SYNC	inc/defines.h	134;"	d
SEI_BUFFERING_PERIOD	inc/sei.h	/^  SEI_BUFFERING_PERIOD = 0,$/;"	e	enum:__anon27
SEI_DEBLOCKING_FILTER_DISPLAY_PREFERENCE	inc/sei.h	/^  SEI_DEBLOCKING_FILTER_DISPLAY_PREFERENCE,$/;"	e	enum:__anon27
SEI_DEC_REF_PIC_MARKING_REPETITION	inc/sei.h	/^  SEI_DEC_REF_PIC_MARKING_REPETITION,$/;"	e	enum:__anon27
SEI_FILLER_PAYLOAD	inc/sei.h	/^  SEI_FILLER_PAYLOAD,$/;"	e	enum:__anon27
SEI_FILM_GRAIN_CHARACTERISTICS	inc/sei.h	/^  SEI_FILM_GRAIN_CHARACTERISTICS,$/;"	e	enum:__anon27
SEI_FULL_FRAME_FREEZE	inc/sei.h	/^  SEI_FULL_FRAME_FREEZE,$/;"	e	enum:__anon27
SEI_FULL_FRAME_FREEZE_RELEASE	inc/sei.h	/^  SEI_FULL_FRAME_FREEZE_RELEASE,$/;"	e	enum:__anon27
SEI_FULL_FRAME_SNAPSHOT	inc/sei.h	/^  SEI_FULL_FRAME_SNAPSHOT,$/;"	e	enum:__anon27
SEI_H	inc/sei.h	12;"	d
SEI_MAX_ELEMENTS	inc/sei.h	/^  SEI_MAX_ELEMENTS  \/\/!< number of maximum syntax elements$/;"	e	enum:__anon27
SEI_MOTION_CONSTRAINED_SLICE_GROUP_SET	inc/sei.h	/^  SEI_MOTION_CONSTRAINED_SLICE_GROUP_SET,$/;"	e	enum:__anon27
SEI_PAN_SCAN_RECT	inc/sei.h	/^  SEI_PAN_SCAN_RECT,$/;"	e	enum:__anon27
SEI_PIC_TIMING	inc/sei.h	/^  SEI_PIC_TIMING,$/;"	e	enum:__anon27
SEI_PROGRESSIVE_REFINEMENT_SEGMENT_END	inc/sei.h	/^  SEI_PROGRESSIVE_REFINEMENT_SEGMENT_END,$/;"	e	enum:__anon27
SEI_PROGRESSIVE_REFINEMENT_SEGMENT_START	inc/sei.h	/^  SEI_PROGRESSIVE_REFINEMENT_SEGMENT_START,$/;"	e	enum:__anon27
SEI_RECOVERY_POINT	inc/sei.h	/^  SEI_RECOVERY_POINT,$/;"	e	enum:__anon27
SEI_SCENE_INFO	inc/sei.h	/^  SEI_SCENE_INFO,$/;"	e	enum:__anon27
SEI_SPARE_PIC	inc/sei.h	/^  SEI_SPARE_PIC,$/;"	e	enum:__anon27
SEI_STEREO_VIDEO_INFO	inc/sei.h	/^  SEI_STEREO_VIDEO_INFO,$/;"	e	enum:__anon27
SEI_SUB_SEQ_CHARACTERISTICS	inc/sei.h	/^  SEI_SUB_SEQ_CHARACTERISTICS,$/;"	e	enum:__anon27
SEI_SUB_SEQ_INFO	inc/sei.h	/^  SEI_SUB_SEQ_INFO,$/;"	e	enum:__anon27
SEI_SUB_SEQ_LAYER_CHARACTERISTICS	inc/sei.h	/^  SEI_SUB_SEQ_LAYER_CHARACTERISTICS,$/;"	e	enum:__anon27
SEI_USER_DATA_REGISTERED_ITU_T_T35	inc/sei.h	/^  SEI_USER_DATA_REGISTERED_ITU_T_T35,$/;"	e	enum:__anon27
SEI_USER_DATA_UNREGISTERED	inc/sei.h	/^  SEI_USER_DATA_UNREGISTERED,$/;"	e	enum:__anon27
SEI_type	inc/sei.h	/^} SEI_type;$/;"	t	typeref:enum:__anon27
SE_BFRAME	inc/elements.h	66;"	d
SE_BFRAME	inc/global.h	/^  SE_BFRAME,$/;"	e	enum:__anon5
SE_CBP_INTER	inc/elements.h	59;"	d
SE_CBP_INTER	inc/global.h	/^  SE_CBP_INTER,$/;"	e	enum:__anon5
SE_CBP_INTRA	inc/elements.h	54;"	d
SE_CBP_INTRA	inc/global.h	/^  SE_CBP_INTRA,$/;"	e	enum:__anon5
SE_CHR_AC_INTER	inc/elements.h	63;"	d
SE_CHR_AC_INTER	inc/global.h	/^  SE_CHR_AC_INTER,$/;"	e	enum:__anon5
SE_CHR_AC_INTRA	inc/elements.h	58;"	d
SE_CHR_AC_INTRA	inc/global.h	/^  SE_CHR_AC_INTRA,$/;"	e	enum:__anon5
SE_CHR_DC_INTER	inc/elements.h	61;"	d
SE_CHR_DC_INTER	inc/global.h	/^  SE_CHR_DC_INTER,$/;"	e	enum:__anon5
SE_CHR_DC_INTRA	inc/elements.h	56;"	d
SE_CHR_DC_INTRA	inc/global.h	/^  SE_CHR_DC_INTRA,$/;"	e	enum:__anon5
SE_DELTA_QUANT_INTER	inc/elements.h	64;"	d
SE_DELTA_QUANT_INTER	inc/global.h	/^  SE_DELTA_QUANT_INTER,$/;"	e	enum:__anon5
SE_DELTA_QUANT_INTRA	inc/elements.h	65;"	d
SE_DELTA_QUANT_INTRA	inc/global.h	/^  SE_DELTA_QUANT_INTRA,$/;"	e	enum:__anon5
SE_EOS	inc/elements.h	67;"	d
SE_EOS	inc/global.h	/^  SE_EOS,$/;"	e	enum:__anon5
SE_HEADER	inc/elements.h	48;"	d
SE_HEADER	inc/global.h	/^  SE_HEADER,$/;"	e	enum:__anon5
SE_INTRAPREDMODE	inc/elements.h	52;"	d
SE_INTRAPREDMODE	inc/global.h	/^  SE_INTRAPREDMODE,$/;"	e	enum:__anon5
SE_LUM_AC_INTER	inc/elements.h	62;"	d
SE_LUM_AC_INTER	inc/global.h	/^  SE_LUM_AC_INTER,$/;"	e	enum:__anon5
SE_LUM_AC_INTRA	inc/elements.h	57;"	d
SE_LUM_AC_INTRA	inc/global.h	/^  SE_LUM_AC_INTRA,$/;"	e	enum:__anon5
SE_LUM_DC_INTER	inc/elements.h	60;"	d
SE_LUM_DC_INTER	inc/global.h	/^  SE_LUM_DC_INTER,$/;"	e	enum:__anon5
SE_LUM_DC_INTRA	inc/elements.h	55;"	d
SE_LUM_DC_INTRA	inc/global.h	/^  SE_LUM_DC_INTRA,$/;"	e	enum:__anon5
SE_MAX_ELEMENTS	inc/elements.h	68;"	d
SE_MAX_ELEMENTS	inc/global.h	/^  SE_MAX_ELEMENTS \/\/!< number of maximum syntax elements, this MUST be the last one!$/;"	e	enum:__anon5
SE_MBTYPE	inc/elements.h	50;"	d
SE_MBTYPE	inc/global.h	/^  SE_MBTYPE,$/;"	e	enum:__anon5
SE_MVD	inc/elements.h	53;"	d
SE_MVD	inc/global.h	/^  SE_MVD,$/;"	e	enum:__anon5
SE_PTYPE	inc/elements.h	49;"	d
SE_PTYPE	inc/global.h	/^  SE_PTYPE,$/;"	e	enum:__anon5
SE_REFFRAME	inc/elements.h	51;"	d
SE_REFFRAME	inc/global.h	/^  SE_REFFRAME,$/;"	e	enum:__anon5
SE_type	inc/global.h	/^} SE_type;        \/\/ substituting the definitions in element.h$/;"	t	typeref:enum:__anon5
SI4MB	inc/defines.h	79;"	d
SIZEslice_group_id	inc/parsetcommon.h	33;"	d
SI_SLICE	inc/global.h	/^  SI_SLICE$/;"	e	enum:__anon12
SNGL_SCAN	inc/macroblock.h	/^const byte SNGL_SCAN[16][2] =$/;"	v
SNGL_SCAN8x8	inc/macroblock.h	/^const byte SNGL_SCAN8x8[64][2] = {$/;"	v
SNGL_SCAN8x8	src/transform8x8.c	/^const byte SNGL_SCAN8x8[64][2] = {$/;"	v
SOP	inc/defines.h	130;"	d
SOS	inc/defines.h	131;"	d
SPSConsistencyCheck	src/parset.c	/^void SPSConsistencyCheck (seq_parameter_set_rbsp_t *sps)$/;"	f
SP_SLICE	inc/global.h	/^  SP_SLICE,$/;"	e	enum:__anon12
SYMTRACESTRING	src/header.c	30;"	d	file:
SYMTRACESTRING	src/header.c	32;"	d	file:
SYMTRACESTRING	src/parset.c	31;"	d	file:
SYMTRACESTRING	src/parset.c	33;"	d	file:
SYMTRACESTRING	src/vlc.c	30;"	d	file:
SYMTRACESTRING	src/vlc.c	32;"	d	file:
ScalingList4x4	inc/parsetcommon.h	/^  int       ScalingList4x4[6][16];                            \/\/ se(v)$/;"	m	struct:__anon24
ScalingList4x4	inc/parsetcommon.h	/^  int      ScalingList4x4[6][16];                             \/\/ se(v)$/;"	m	struct:__anon25
ScalingList8x8	inc/parsetcommon.h	/^  int       ScalingList8x8[2][64];                            \/\/ se(v)$/;"	m	struct:__anon24
ScalingList8x8	inc/parsetcommon.h	/^  int      ScalingList8x8[2][64];                             \/\/ se(v)$/;"	m	struct:__anon25
Scaling_List	src/parset.c	/^void Scaling_List(int *scalingList, int sizeOfScalingList, Boolean *UseDefaultScalingMatrix, Bitstream *s)$/;"	f
SeqParSet	src/parset.c	/^seq_parameter_set_rbsp_t SeqParSet[MAXSPS];$/;"	v
SetB8Mode	src/macroblock.c	/^void SetB8Mode (struct img_par* img, Macroblock* currMB, int value, int i)$/;"	f
SetMotionVectorPredictor	src/macroblock.c	/^static void SetMotionVectorPredictor (struct img_par  *img,$/;"	f	file:
ShowBits	src/vlc.c	/^int ShowBits (byte buffer[],int totbitoffset,int bytecount, int numbits)$/;"	f
Slice	inc/global.h	/^} Slice;$/;"	t	typeref:struct:__anon19
SliceMode	inc/global.h	/^} SliceMode;$/;"	t	typeref:enum:__anon8
SliceType	inc/global.h	/^} SliceType;$/;"	t	typeref:enum:__anon12
StorablePicture	inc/mbuffer.h	/^} StorablePicture;$/;"	t	typeref:struct:storable_picture
SymbolMode	inc/global.h	/^} SymbolMode;$/;"	t	typeref:enum:__anon9
SyntaxElement	inc/global.h	/^} SyntaxElement;$/;"	t	typeref:struct:syntaxelement
TIMEB	inc/win32.h	34;"	d
TIMEB	inc/win32.h	42;"	d
TOP_FIELD	inc/global.h	/^  TOP_FIELD,$/;"	e	enum:__anon11
TOTRUN_NUM	inc/defines.h	53;"	d
TRACE	inc/defines.h	22;"	d
TRACE	inc/defines.h	24;"	d
TRACEFILE	src/ldecod.c	77;"	d	file:
TRACESTRING_SIZE	inc/global.h	297;"	d
TRACE_STRING	src/macroblock.c	45;"	d	file:
TRACE_STRING	src/macroblock.c	47;"	d	file:
TRUE	inc/parsetcommon.h	/^  TRUE$/;"	e	enum:__anon21
TextureInfoContexts	inc/global.h	/^} TextureInfoContexts;$/;"	t	typeref:struct:__anon17
ThisPOC	inc/global.h	/^           int PreviousPOC, ThisPOC;$/;"	m	struct:img_par
TopFieldForSkip_UV	inc/global.h	/^int  TopFieldForSkip_UV[2][16][16];$/;"	v
TopFieldForSkip_Y	inc/global.h	/^int  TopFieldForSkip_Y[16][16];$/;"	v
Transform8x8Mode	inc/global.h	/^  int Transform8x8Mode;$/;"	m	struct:img_par
UVLC	inc/global.h	/^  UVLC,$/;"	e	enum:__anon9
UseDefaultScalingMatrix4x4Flag	inc/parsetcommon.h	/^  Boolean   UseDefaultScalingMatrix4x4Flag[6];$/;"	m	struct:__anon24
UseDefaultScalingMatrix4x4Flag	inc/parsetcommon.h	/^  Boolean  UseDefaultScalingMatrix4x4Flag[6];$/;"	m	struct:__anon25
UseDefaultScalingMatrix8x8Flag	inc/parsetcommon.h	/^  Boolean   UseDefaultScalingMatrix8x8Flag[2];$/;"	m	struct:__anon24
UseDefaultScalingMatrix8x8Flag	inc/parsetcommon.h	/^  Boolean  UseDefaultScalingMatrix8x8Flag[2];$/;"	m	struct:__anon25
UseParameterSet	src/parset.c	/^void UseParameterSet (int PicParsetId)$/;"	f
UsedBits	src/vlc.c	/^int UsedBits;      \/\/ for internal statistics, is adjusted by se_v, ue_v, u_1$/;"	v
VERSION	src/ldecod.c	72;"	d	file:
VERT_LEFT_PRED	inc/defines.h	114;"	d
VERT_PRED	inc/defines.h	107;"	d
VERT_PRED_16	inc/defines.h	118;"	d
VERT_PRED_8	inc/defines.h	126;"	d
VERT_RIGHT_PRED	inc/defines.h	112;"	d
Valid	inc/parsetcommon.h	/^  Boolean   Valid;                  \/\/ indicates the parameter set is valid$/;"	m	struct:__anon24
Valid	inc/parsetcommon.h	/^  Boolean   Valid;                  \/\/ indicates the parameter set is valid$/;"	m	struct:__anon25
WRITE_MAP_IMAGE	src/sei.c	422;"	d	file:
YUV400	inc/defines.h	40;"	d
YUV420	inc/defines.h	41;"	d
YUV422	inc/defines.h	42;"	d
YUV444	inc/defines.h	43;"	d
ZEROBYTES_SHORTSTARTCODE	inc/defines.h	152;"	d
ZEROSNR	inc/defines.h	46;"	d
ZERO_P8x8	src/macroblock.c	216;"	d	file:
ZZ_SCAN	src/parset.c	/^const byte ZZ_SCAN[16]  =$/;"	v
ZZ_SCAN8	src/parset.c	/^const byte ZZ_SCAN8[64] =$/;"	v
_ANNEXB_H_	inc/annexb.h	13;"	d
_BIARIDECOD_H_	inc/biaridecod.h	21;"	d
_BLOCK_H_	inc/block.h	19;"	d
_CABAC_H_	inc/cabac.h	20;"	d
_CONTEXT_INI_	inc/context_ini.h	18;"	d
_DEFINES_H_	inc/defines.h	19;"	d
_ELEMENTS_H_	inc/elements.h	24;"	d
_ERC_API_H_	inc/erc_api.h	22;"	d
_ERC_DO_H_	inc/erc_do.h	17;"	d
_ERC_GLOBALS_H_	inc/erc_globals.h	16;"	d
_ERRORCONCEALMENT_H_	inc/errorconcealment.h	14;"	d
_FMO_H_	inc/fmo.h	18;"	d
_GLOBAL_H_	inc/global.h	27;"	d
_HEADER_H_	inc/header.h	12;"	d
_IFUNCTIONS_H_	inc/ifunctions.h	19;"	d
_IMAGE_H_	inc/image.h	13;"	d
_LEAKY_BUCKET_H_	inc/leaky_bucket.h	15;"	d
_LOOPFILTER_H_	inc/loopfilter.h	11;"	d
_MACROBLOCK_H_	inc/macroblock.h	16;"	d
_MBUFFER_H_	inc/mbuffer.h	21;"	d
_MB_ACCESS_H_	inc/mb_access.h	16;"	d
_MEMALLOC_H_	inc/memalloc.h	15;"	d
_NALUCOMMON_H_	inc/nalucommon.h	17;"	d
_NALU_H_	inc/nalu.h	18;"	d
_NEW_8x8_ARRAYS_INCLUDED_	inc/macroblock.h	331;"	d
_OUTPUT_H_	inc/output.h	14;"	d
_PARSETCOMMON_H_	inc/parsetcommon.h	27;"	d
_PARSET_H_	inc/parset.h	16;"	d
_RTP_H_	inc/rtp.h	12;"	d
_TRANSFORM8X8_H_	inc/transform8x8.h	18;"	d
_VLC_H_	inc/vlc.h	16;"	d
_WIN32_H_	inc/win32.h	15;"	d
abs_contexts	inc/global.h	/^  BiContextType  abs_contexts [NUM_BLOCK_TYPES][NUM_ABS_CTX];$/;"	m	struct:__anon17
abs_diff_pic_num_minus1_l0	inc/global.h	/^  int                 *abs_diff_pic_num_minus1_l0;$/;"	m	struct:__anon19
abs_diff_pic_num_minus1_l1	inc/global.h	/^  int                 *abs_diff_pic_num_minus1_l1;$/;"	m	struct:__anon19
activate_pps	src/parset.c	/^void activate_pps(pic_parameter_set_rbsp_t *pps)$/;"	f
activate_sps	src/parset.c	/^void activate_sps (seq_parameter_set_rbsp_t *sps)$/;"	f
active_pps	inc/global.h	/^pic_parameter_set_rbsp_t *active_pps;$/;"	v
active_sps	inc/global.h	/^seq_parameter_set_rbsp_t *active_sps;$/;"	v
adaptive_memory_management	src/mbuffer.c	/^static void adaptive_memory_management(StorablePicture* p)$/;"	f	file:
adaptive_ref_pic_buffering_flag	inc/global.h	/^  int adaptive_ref_pic_buffering_flag;$/;"	m	struct:img_par
adaptive_ref_pic_buffering_flag	inc/mbuffer.h	/^  int         adaptive_ref_pic_buffering_flag;$/;"	m	struct:storable_picture
add_node	src/erc_do_p.c	/^void add_node( struct concealment_node *concealment_new )$/;"	f
alloc_colocated	src/mbuffer.c	/^ColocatedParams* alloc_colocated(int size_x, int size_y, int mb_adaptive_frame_field_flag)$/;"	f
alloc_frame_store	src/mbuffer.c	/^FrameStore* alloc_frame_store()$/;"	f
alloc_ref_pic_list_reordering_buffer	src/mbuffer.c	/^void alloc_ref_pic_list_reordering_buffer(Slice *currSlice)$/;"	f
alloc_storable_picture	src/mbuffer.c	/^StorablePicture* alloc_storable_picture(PictureStructure structure, int size_x, int size_y, int size_x_cr, int size_y_cr)$/;"	f
allrefzero	inc/global.h	/^  int allrefzero;$/;"	m	struct:img_par
apply_weights	inc/global.h	/^  unsigned int apply_weights;$/;"	m	struct:img_par
arideco_bits_read	src/biaridecod.c	/^int arideco_bits_read(DecodingEnvironmentPtr dep)$/;"	f
arideco_create_decoding_environment	src/biaridecod.c	/^DecodingEnvironmentPtr arideco_create_decoding_environment()$/;"	f
arideco_delete_decoding_environment	src/biaridecod.c	/^void arideco_delete_decoding_environment(DecodingEnvironmentPtr dep)$/;"	f
arideco_done_decoding	src/biaridecod.c	/^void arideco_done_decoding(DecodingEnvironmentPtr dep)$/;"	f
arideco_start_decoding	src/biaridecod.c	/^void arideco_start_decoding(DecodingEnvironmentPtr dep, unsigned char *cpixcode,$/;"	f
aspect_ratio_idc	inc/parsetcommon.h	/^    unsigned int aspect_ratio_idc;                               \/\/ u(8)$/;"	m	struct:__anon23
aspect_ratio_info_present_flag	inc/parsetcommon.h	/^  Boolean      aspect_ratio_info_present_flag;                   \/\/ u(1)$/;"	m	struct:__anon23
assignSE2partition	src/nal_part.c	/^int assignSE2partition[][SE_MAX_ELEMENTS] =$/;"	v
available	inc/global.h	/^  int available;$/;"	m	struct:pix_pos
b8_type_contexts	inc/global.h	/^  BiContextType b8_type_contexts [2][NUM_B8_TYPE_CTX];$/;"	m	struct:__anon16
b8mode	inc/global.h	/^  char          b8mode[4];$/;"	m	struct:macroblock
b8pdir	inc/global.h	/^  char          b8pdir[4];$/;"	m	struct:macroblock
bcbp_contexts	inc/global.h	/^  BiContextType  bcbp_contexts[NUM_BLOCK_TYPES][NUM_BCBP_CTX];$/;"	m	struct:__anon17
biari_decode_final	src/biaridecod.c	/^unsigned int biari_decode_final(DecodingEnvironmentPtr dep)$/;"	f
biari_decode_symbol	src/biaridecod.c	/^unsigned int biari_decode_symbol(DecodingEnvironmentPtr dep, BiContextTypePtr bi_ct )$/;"	f
biari_decode_symbol_eq_prob	src/biaridecod.c	/^unsigned int biari_decode_symbol_eq_prob(DecodingEnvironmentPtr dep)$/;"	f
biari_init_context	src/biaridecod.c	/^void biari_init_context (struct img_par* img, BiContextTypePtr ctx, const int* ini)$/;"	f
binCount	src/biaridecod.c	/^int binCount = 0;$/;"	v
bit_depth_chroma_minus8	inc/parsetcommon.h	/^  unsigned int bit_depth_chroma_minus8;                          \/\/ ue(v)$/;"	m	struct:__anon25
bit_depth_luma_minus8	inc/parsetcommon.h	/^  unsigned int bit_depth_luma_minus8;                            \/\/ ue(v)$/;"	m	struct:__anon25
bit_rate_scale	inc/parsetcommon.h	/^  unsigned int bit_rate_scale;                                   \/\/ u(4)$/;"	m	struct:__anon22
bit_rate_value_minus1	inc/parsetcommon.h	/^    unsigned int bit_rate_value_minus1 [MAXIMUMVALUEOFcpb_cnt];  \/\/ ue(v)$/;"	m	struct:__anon22
bitcounter	src/filehandle.c	/^static int bitcounter = 0;$/;"	v	file:
bitdepth_chroma	inc/global.h	/^  int bitdepth_chroma;$/;"	m	struct:img_par
bitdepth_chroma_qp_scale	inc/global.h	/^  int bitdepth_chroma_qp_scale;$/;"	m	struct:img_par
bitdepth_luma	inc/global.h	/^  int bitdepth_luma;$/;"	m	struct:img_par
bitdepth_luma_qp_scale	inc/global.h	/^  int bitdepth_luma_qp_scale;$/;"	m	struct:img_par
bitpattern	inc/global.h	/^  unsigned int  bitpattern;            \/\/!< UVLC bitpattern$/;"	m	struct:syntaxelement
bits	src/annexb.c	/^FILE *bits = NULL;                \/\/!< the bit stream file$/;"	v
bits	src/rtp.c	/^FILE *bits;$/;"	v
bitstream	inc/global.h	/^  Bitstream           *bitstream;$/;"	m	struct:datapartition
bitstream_length	inc/global.h	/^  int           bitstream_length;   \/\/!< over codebuffer lnegth, byte oriented, UVLC only$/;"	m	struct:__anon18
bitstream_restriction_flag	inc/parsetcommon.h	/^  Boolean      bitstream_restriction_flag;                       \/\/ u(1)$/;"	m	struct:__anon23
block8x8_idx	inc/macroblock.h	/^int   block8x8_idx[3][4][4] =$/;"	v
block_x	inc/global.h	/^  int block_x;$/;"	m	struct:img_par
block_y	inc/global.h	/^  int block_y;$/;"	m	struct:img_par
bottom_field	inc/mbuffer.h	/^  StorablePicture *bottom_field;$/;"	m	struct:frame_store
bottom_field	inc/mbuffer.h	/^  struct storable_picture *bottom_field;  \/\/ for mb aff, if frame for referencing the bottom field$/;"	m	struct:storable_picture	typeref:struct:storable_picture::storable_picture
bottom_field_flag	inc/global.h	/^   unsigned bottom_field_flag;$/;"	m	struct:old_slice_par
bottom_field_flag	inc/global.h	/^  unsigned int bottom_field_flag;$/;"	m	struct:img_par
bottom_moving_block	inc/mbuffer.h	/^  byte **     bottom_moving_block;$/;"	m	struct:colocated_params
bottom_mv	inc/mbuffer.h	/^  short ****  bottom_mv;            \/\/!< motion vector       [list][subblock_y][subblock_x][component]$/;"	m	struct:colocated_params
bottom_poc	inc/mbuffer.h	/^  int         bottom_poc;$/;"	m	struct:storable_picture
bottom_ref_idx	inc/mbuffer.h	/^  char  ***   bottom_ref_idx;       \/\/!< reference picture   [list][subblock_y][subblock_x]$/;"	m	struct:colocated_params
bottom_ref_pic_id	inc/mbuffer.h	/^  int64 ***   bottom_ref_pic_id;    \/\/!< reference picture identifier [list][subblock_y][subblock_x]$/;"	m	struct:colocated_params
bottom_ref_pic_num	inc/mbuffer.h	/^  int64       bottom_ref_pic_num [MAX_NUM_SLICES][6][MAX_LIST_SIZE];$/;"	m	struct:storable_picture
bottom_ref_pic_num	inc/mbuffer.h	/^  int64       bottom_ref_pic_num[6][MAX_LIST_SIZE];$/;"	m	struct:colocated_params
bottom_right	inc/parsetcommon.h	/^      unsigned  int bottom_right[MAXnum_slice_groups_minus1];     \/\/ ue(v)$/;"	m	struct:__anon24
bottompoc	inc/global.h	/^           int bottompoc;   \/\/poc of bottom field of frame$/;"	m	struct:img_par
buf	inc/nalucommon.h	/^  byte *buf;        \/\/! conjtains the first byte followed by the EBSP$/;"	m	struct:__anon20
buf2img	src/image.c	/^void buf2img (imgpel** imgX, unsigned char* buf, int size_x, int size_y, int symbol_size_in_bytes)$/;"	f
buildPredRegionYUV	src/erc_do_p.c	/^static void buildPredRegionYUV(struct img_par *img, int *mv, int x, int y, imgpel *predMB)$/;"	f	file:
buildPredblockRegionYUV	src/erc_do_p.c	/^static void buildPredblockRegionYUV(struct img_par *img, int *mv,$/;"	f	file:
byte	inc/global.h	/^typedef unsigned char  byte;                     \/\/!<  8 bit unsigned$/;"	t
c1isdc	src/cabac.c	/^static const int c1isdc       [] = { 1,  0,  1,  1,  1,  1,  1,  0,  1,  1};$/;"	v	file:
c_ipred_mode	inc/global.h	/^  int           c_ipred_mode;       \/\/!< chroma intra prediction mode$/;"	m	struct:macroblock
cabac_new_slice	src/cabac.c	/^void cabac_new_slice()$/;"	f
cabac_startcode_follows	src/cabac.c	/^int cabac_startcode_follows(struct img_par *img, int eos_bit)$/;"	f
calc_buffer	src/leaky_bucket.c	/^void calc_buffer(struct inp_par *inp)$/;"	f
cbp	inc/global.h	/^  int           cbp;$/;"	m	struct:macroblock
cbp_bits	inc/global.h	/^  int64         cbp_bits;$/;"	m	struct:macroblock
cbp_blk	inc/global.h	/^  int64         cbp_blk ;$/;"	m	struct:macroblock
cbp_blk_chroma	inc/macroblock.h	/^static unsigned char cbp_blk_chroma[8][4] =$/;"	v
cbp_contexts	inc/global.h	/^  BiContextType  cbp_contexts [3][NUM_CBP_CTX];$/;"	m	struct:__anon17
cbr_flag	inc/parsetcommon.h	/^    unsigned int cbr_flag              [MAXIMUMVALUEOFcpb_cnt];  \/\/ u(1)$/;"	m	struct:__anon22
cc	inc/rtp.h	/^  unsigned int cc;         \/*!< CSRC count, normally 0 in the absence$/;"	m	struct:__anon26
check_next_mb_and_get_field_mode_CABAC	src/cabac.c	/^int check_next_mb_and_get_field_mode_CABAC( SyntaxElement *se,$/;"	f
check_num_ref	src/mbuffer.c	/^void check_num_ref()$/;"	f
chroma_edge	src/loopFilter.c	/^static const char chroma_edge[2][4][4] = \/\/[dir][edge][yuv_format]$/;"	v	file:
chroma_format_idc	inc/mbuffer.h	/^  int         chroma_format_idc;$/;"	m	struct:storable_picture
chroma_format_idc	inc/parsetcommon.h	/^  unsigned  int chroma_format_idc;                                \/\/ ue(v)$/;"	m	struct:__anon25
chroma_location_info_present_flag	inc/parsetcommon.h	/^  Boolean      chroma_location_info_present_flag;                \/\/ u(1)$/;"	m	struct:__anon23
chroma_log2_weight_denom	inc/global.h	/^  unsigned int chroma_log2_weight_denom;$/;"	m	struct:img_par
chroma_qp_index_offset	inc/parsetcommon.h	/^  int       chroma_qp_index_offset;                           \/\/ se(v)$/;"	m	struct:__anon24
chroma_qp_offset	inc/mbuffer.h	/^  int         chroma_qp_offset[2];$/;"	m	struct:storable_picture
chroma_sample_loc_type_bottom_field	inc/parsetcommon.h	/^    unsigned int  chroma_sample_loc_type_bottom_field;            \/\/ ue(v)$/;"	m	struct:__anon23
chroma_sample_loc_type_top_field	inc/parsetcommon.h	/^    unsigned int  chroma_sample_loc_type_top_field;               \/\/ ue(v)$/;"	m	struct:__anon23
chroma_vector_adjustment	inc/mbuffer.h	/^  int         chroma_vector_adjustment;$/;"	m	struct:storable_picture
cipr_contexts	inc/global.h	/^  BiContextType  cipr_contexts[NUM_CIPR_CTX];$/;"	m	struct:__anon17
clear_picture	src/output.c	/^void clear_picture(StorablePicture *p)$/;"	f
close	inc/win32.h	28;"	d
cod_counter	inc/global.h	/^  int cod_counter;                            \/\/!< Current count of number of skipped macroblocks in a row$/;"	m	struct:img_par
code_from_bitstream_2d	src/vlc.c	/^int code_from_bitstream_2d(SyntaxElement *sym,$/;"	f
code_len	inc/global.h	/^  int           code_len;           \/\/!< overall codebuffer length, CABAC only$/;"	m	struct:__anon18
coded_frame	inc/mbuffer.h	/^  int         coded_frame;$/;"	m	struct:storable_picture
cof	inc/global.h	/^  int cof[4][12][4][4];                       \/\/!< correction coefficients from predicted$/;"	m	struct:img_par
cofAC8x8_iintra	inc/transform8x8.h	/^int   **cofAC8x8_intra, ****cofAC8x8_iintra; \/\/ [level\/run][scan_pos]$/;"	v
cofAC8x8_intra	inc/transform8x8.h	/^int   **cofAC8x8_intra, ****cofAC8x8_iintra; \/\/ [level\/run][scan_pos]$/;"	v
cofu	inc/global.h	/^  int cofu[16];$/;"	m	struct:img_par
cofuv_blk_x	inc/macroblock.h	/^static unsigned char cofuv_blk_x[3][8][4] =$/;"	v
cofuv_blk_y	inc/macroblock.h	/^static unsigned char cofuv_blk_y[3][8][4] =$/;"	v
colocated_params	inc/mbuffer.h	/^typedef struct colocated_params$/;"	s
colour_description_present_flag	inc/parsetcommon.h	/^    Boolean      colour_description_present_flag;                \/\/ u(1)$/;"	m	struct:__anon23
colour_primaries	inc/parsetcommon.h	/^      unsigned int colour_primaries;                             \/\/ u(8)$/;"	m	struct:__anon23
comp	src/erc_do_p.c	/^int comp(const void *i, const void *j)$/;"	f
compare_fs_by_frame_num_desc	src/mbuffer.c	/^static int compare_fs_by_frame_num_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_fs_by_lt_pic_idx_asc	src/mbuffer.c	/^static int compare_fs_by_lt_pic_idx_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_fs_by_poc_asc	src/mbuffer.c	/^static int compare_fs_by_poc_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_fs_by_poc_desc	src/mbuffer.c	/^static int compare_fs_by_poc_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_lt_pic_num_asc	src/erc_do_p.c	/^static int compare_pic_by_lt_pic_num_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_lt_pic_num_asc	src/mbuffer.c	/^static int compare_pic_by_lt_pic_num_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_pic_num_desc	src/erc_do_p.c	/^static int compare_pic_by_pic_num_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_pic_num_desc	src/mbuffer.c	/^static int compare_pic_by_pic_num_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_poc_asc	src/erc_do_p.c	/^static int compare_pic_by_poc_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_poc_asc	src/mbuffer.c	/^static int compare_pic_by_poc_asc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_poc_desc	src/erc_do_p.c	/^static int compare_pic_by_poc_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compare_pic_by_poc_desc	src/mbuffer.c	/^static int compare_pic_by_poc_desc( const void *arg1, const void *arg2 )$/;"	f	file:
compute_colocated	src/mbuffer.c	/^void compute_colocated(ColocatedParams* p, StorablePicture **listX[6])$/;"	f
concealBlocks	src/erc_do_i.c	/^static void concealBlocks( int lastColumn, int lastRow, int comp, frame *recfr, int picSizeX, int *condition )$/;"	f	file:
concealByCopy	src/erc_do_p.c	/^static int concealByCopy(frame *recfr, int currMBNum,$/;"	f	file:
concealByTrial	src/erc_do_p.c	/^static int concealByTrial(frame *recfr, imgpel *predMB,$/;"	f	file:
conceal_lost_frames	src/erc_do_p.c	/^void conceal_lost_frames(ImageParameters *img)$/;"	f
conceal_mode	inc/global.h	/^  int conceal_mode;$/;"	m	struct:img_par
conceal_mode	inc/global.h	/^  int conceal_mode;$/;"	m	struct:inp_par
conceal_non_ref_pics	src/erc_do_p.c	/^void conceal_non_ref_pics(int diff)$/;"	f
conceal_slice_type	inc/global.h	/^  int conceal_slice_type;$/;"	m	struct:img_par
concealed_pic	inc/mbuffer.h	/^  int concealed_pic; \/\/indicates if this is a concealed picutre$/;"	m	struct:storable_picture
concealment	inc/erc_api.h	/^  int   concealment;$/;"	m	struct:ercVariables_s
concealment_end	src/erc_do_p.c	/^struct concealment_node *concealment_end = NULL;$/;"	v	typeref:struct:concealment_node
concealment_head	src/erc_do_p.c	/^struct concealment_node *concealment_head = NULL;$/;"	v	typeref:struct:concealment_node
concealment_node	inc/erc_api.h	/^struct concealment_node {$/;"	s
concealment_reference	inc/mbuffer.h	/^  int concealment_reference;$/;"	m	struct:frame_store
constrained_intra_pred_flag	inc/parsetcommon.h	/^  Boolean   constrained_intra_pred_flag;                      \/\/ u(1)$/;"	m	struct:__anon24
constrained_set0_flag	inc/parsetcommon.h	/^  Boolean   constrained_set0_flag;                            \/\/ u(1)$/;"	m	struct:__anon25
constrained_set1_flag	inc/parsetcommon.h	/^  Boolean   constrained_set1_flag;                            \/\/ u(1)$/;"	m	struct:__anon25
constrained_set2_flag	inc/parsetcommon.h	/^  Boolean   constrained_set2_flag;                            \/\/ u(1)$/;"	m	struct:__anon25
constrained_set3_flag	inc/parsetcommon.h	/^  Boolean   constrained_set3_flag;                            \/\/ u(1)$/;"	m	struct:__anon25
context	inc/global.h	/^  int           context;               \/\/!< CABAC context$/;"	m	struct:syntaxelement
copyBetweenFrames	src/erc_do_p.c	/^static void copyBetweenFrames (frame *recfr, int currYBlockNum, int picSizeX, int regionSize)$/;"	f	file:
copyPredMB	src/erc_do_p.c	/^static void copyPredMB (int currYBlockNum, imgpel *predMB, frame *recfr,$/;"	f	file:
copy_prev_pic_to_concealed_pic	src/erc_do_p.c	/^copy_prev_pic_to_concealed_pic(StorablePicture *picture, ImageParameters *img)$/;"	f	file:
copy_to_conceal	src/erc_do_p.c	/^static void copy_to_conceal(StorablePicture *src, StorablePicture *dst, ImageParameters *img)$/;"	f	file:
copyblock_sp	src/block.c	/^void copyblock_sp(struct img_par *img,int block_x,int block_y)$/;"	f
cpb_cnt_minus1	inc/parsetcommon.h	/^  unsigned int cpb_cnt_minus1;                                   \/\/ ue(v)$/;"	m	struct:__anon22
cpb_removal_delay_length_minus1	inc/parsetcommon.h	/^  unsigned int cpb_removal_delay_length_minus1;                  \/\/ u(5)$/;"	m	struct:__anon22
cpb_size_scale	inc/parsetcommon.h	/^  unsigned int cpb_size_scale;                                   \/\/ u(4)$/;"	m	struct:__anon22
cpb_size_value_minus1	inc/parsetcommon.h	/^    unsigned int cpb_size_value_minus1 [MAXIMUMVALUEOFcpb_cnt];  \/\/ ue(v)$/;"	m	struct:__anon22
create_contexts_MotionInfo	src/cabac.c	/^MotionInfoContexts* create_contexts_MotionInfo(void)$/;"	f
create_contexts_TextureInfo	src/cabac.c	/^TextureInfoContexts* create_contexts_TextureInfo(void)$/;"	f
currSegment	inc/erc_api.h	/^  int     currSegment;$/;"	m	struct:ercVariables_s
currSegmentCorrupted	inc/erc_api.h	/^  int   currSegmentCorrupted;$/;"	m	struct:ercVariables_s
currentSlice	inc/global.h	/^  Slice       *currentSlice;                   \/\/!< pointer to current Slice data struct$/;"	m	struct:img_par
current_mb_nr	inc/global.h	/^  unsigned int current_mb_nr; \/\/ bitstream order$/;"	m	struct:img_par
current_slice_nr	inc/global.h	/^  int current_slice_nr;$/;"	m	struct:img_par
dClip3	inc/ifunctions.h	/^static inline double dClip3(double low, double high, double x)$/;"	f
dClip3	inc/ifunctions.h	139;"	d
dabs	inc/ifunctions.h	/^static inline double dabs(double x)$/;"	f
dabs	inc/ifunctions.h	130;"	d
datapartition	inc/global.h	/^typedef struct datapartition$/;"	s
dc_pred_value_chroma	inc/global.h	/^  unsigned int dc_pred_value_chroma;          \/\/!< chroma value for DC prediction (depends on chroma pel bit depth)$/;"	m	struct:img_par
dc_pred_value_luma	inc/global.h	/^  unsigned int dc_pred_value_luma;            \/\/!< luma value for DC prediction (depends on luma pel bit depth)$/;"	m	struct:img_par
de_cabac	inc/global.h	/^  DecodingEnvironment de_cabac;$/;"	m	struct:datapartition
deblocking_filter_control_present_flag	inc/parsetcommon.h	/^  Boolean   deblocking_filter_control_present_flag;           \/\/ u(1)$/;"	m	struct:__anon24
dec_picture	src/image.c	/^StorablePicture *dec_picture;$/;"	v
dec_ref_pic_marking	src/header.c	/^void dec_ref_pic_marking(Bitstream *currStream)$/;"	f
dec_ref_pic_marking_buffer	inc/global.h	/^  DecRefPicMarking_t *dec_ref_pic_marking_buffer;                    \/\/!< stores the memory management control operations$/;"	m	struct:img_par
dec_ref_pic_marking_buffer	inc/mbuffer.h	/^  DecRefPicMarking_t *dec_ref_pic_marking_buffer;                    \/\/!< stores the memory management control operations$/;"	m	struct:storable_picture
decode_ipcm_mb	src/macroblock.c	/^void decode_ipcm_mb(struct img_par *img)$/;"	f
decode_one_frame	src/image.c	/^int decode_one_frame(struct img_par *img,struct inp_par *inp, struct snr_par *snr)$/;"	f
decode_one_macroblock	src/macroblock.c	/^int decode_one_macroblock(struct img_par *img,struct inp_par *inp)$/;"	f
decode_one_slice	src/image.c	/^void decode_one_slice(struct img_par *img,struct inp_par *inp)$/;"	f
decode_poc	src/header.c	/^void decode_poc(struct img_par *img)$/;"	f
decode_slice	src/image.c	/^void decode_slice(struct img_par *img,struct inp_par *inp, int current_header)$/;"	f
decoded_picture_buffer	inc/mbuffer.h	/^typedef struct decoded_picture_buffer$/;"	s
delete_contexts_MotionInfo	src/cabac.c	/^void delete_contexts_MotionInfo(MotionInfoContexts *deco_ctx)$/;"	f
delete_contexts_TextureInfo	src/cabac.c	/^void delete_contexts_TextureInfo(TextureInfoContexts *deco_ctx)$/;"	f
delete_list	src/erc_do_p.c	/^void delete_list( struct concealment_node *ptr )$/;"	f
delete_node	src/erc_do_p.c	/^void delete_node( struct concealment_node *ptr )$/;"	f
delta_pic_oder_cnt_bottom	inc/global.h	/^   int delta_pic_oder_cnt_bottom;$/;"	m	struct:old_slice_par
delta_pic_order_always_zero_flag	inc/parsetcommon.h	/^    Boolean delta_pic_order_always_zero_flag;               \/\/ u(1)$/;"	m	struct:__anon25
delta_pic_order_cnt	inc/global.h	/^           int delta_pic_order_cnt[3];$/;"	m	struct:img_par
delta_pic_order_cnt	inc/global.h	/^   int delta_pic_order_cnt[2];$/;"	m	struct:old_slice_par
delta_pic_order_cnt_bottom	inc/global.h	/^           int delta_pic_order_cnt_bottom;$/;"	m	struct:img_par
delta_qp_contexts	inc/global.h	/^  BiContextType delta_qp_contexts[NUM_DELTA_QP_CTX];$/;"	m	struct:__anon16
delta_quant	inc/global.h	/^  int           delta_quant;          \/\/!< for rate control$/;"	m	struct:macroblock
dequant_coef	inc/macroblock.h	/^const int dequant_coef[6][4][4] = {$/;"	v
dequant_coef8	inc/macroblock.h	/^static const int dequant_coef8[6][8][8] =$/;"	v
dequant_coef8	src/transform8x8.c	/^const int dequant_coef8[6][8][8] =$/;"	v
difference_of_pic_nums_minus1	inc/global.h	/^  int difference_of_pic_nums_minus1;$/;"	m	struct:DecRefPicMarking_s
direct_8x8_inference_flag	inc/parsetcommon.h	/^  Boolean   direct_8x8_inference_flag;                        \/\/ u(1)$/;"	m	struct:__anon25
direct_output	src/output.c	/^void direct_output(StorablePicture *p, int p_out)$/;"	f
direct_spatial_mv_pred_flag	inc/global.h	/^  int direct_spatial_mv_pred_flag;            \/\/!< 1 for Spatial Direct, 0 for Temporal$/;"	m	struct:img_par
dmax	inc/ifunctions.h	/^static inline double dmax(double a, double b)$/;"	f
dmax	inc/ifunctions.h	126;"	d
dmin	inc/ifunctions.h	/^static inline double dmin(double a, double b)$/;"	f
dmin	inc/ifunctions.h	125;"	d
dp_mode	inc/global.h	/^  int                 dp_mode;       \/\/!< data partioning mode$/;"	m	struct:__anon19
dpb	src/mbuffer.c	/^DecodedPictureBuffer dpb;$/;"	v
dpb_combine_field	src/mbuffer.c	/^void dpb_combine_field(FrameStore *fs)$/;"	f
dpb_combine_field_yuv	src/mbuffer.c	/^void dpb_combine_field_yuv(FrameStore *fs)$/;"	f
dpb_output_delay_length_minus1	inc/parsetcommon.h	/^  unsigned int dpb_output_delay_length_minus1;                   \/\/ u(5)$/;"	m	struct:__anon22
dpb_split_field	src/mbuffer.c	/^void dpb_split_field(FrameStore *fs)$/;"	f
dump_dpb	src/mbuffer.c	/^void dump_dpb()$/;"	f
dumppoc	src/header.c	/^int dumppoc(struct img_par *img) {$/;"	f
earlier_missing_poc	inc/global.h	/^  int earlier_missing_poc;$/;"	m	struct:img_par
ec_flag	src/errorconcealment.c	/^static int ec_flag[SE_MAX_ELEMENTS];        \/\/!< array to set errorconcealment$/;"	v	file:
edgeDistortion	src/erc_do_p.c	/^static int edgeDistortion (int predBlocks[], int currYBlockNum, imgpel *predMB,$/;"	f	file:
ei_flag	inc/global.h	/^  int                 ei_flag;       \/\/!< 0 if the partArr[0] contains valid information$/;"	m	struct:__anon19
ei_flag	inc/global.h	/^  int           ei_flag;            \/\/!< error indication, 0: no error, else unspecified error$/;"	m	struct:__anon18
ei_flag	inc/global.h	/^  int           ei_flag;$/;"	m	struct:macroblock
endMBPos	inc/erc_api.h	/^  int      endMBPos;$/;"	m	struct:ercSegment_s
entropy_coding_mode_flag	inc/parsetcommon.h	/^  Boolean   entropy_coding_mode_flag;                         \/\/ u(1)$/;"	m	struct:__anon24
ercClose	src/erc_api.c	/^void ercClose( ercVariables_t *errorVar )$/;"	f
ercCollect8PredBlocks	src/erc_do_i.c	/^int ercCollect8PredBlocks( int predBlocks[], int currRow, int currColumn, int *condition,$/;"	f
ercCollectColumnBlocks	src/erc_do_i.c	/^int ercCollectColumnBlocks( int predBlocks[], int currRow, int currColumn, int *condition, int maxRow, int maxColumn, int step )$/;"	f
ercConcealInterFrame	src/erc_do_p.c	/^int ercConcealInterFrame(frame *recfr, objectBuffer_t *object_list,$/;"	f
ercConcealIntraFrame	src/erc_do_i.c	/^int ercConcealIntraFrame( frame *recfr, int picSizeX, int picSizeY, ercVariables_t *errorVar )$/;"	f
ercInit	src/erc_api.c	/^void ercInit(int pic_sizex, int pic_sizey, int flag)$/;"	f
ercMarkCurrMBConcealed	src/erc_api.c	/^void ercMarkCurrMBConcealed( int currMBNum, int comp, int picSizeX, ercVariables_t *errorVar )$/;"	f
ercMarkCurrSegmentLost	src/erc_api.c	/^void ercMarkCurrSegmentLost(int picSizeX, ercVariables_t *errorVar )$/;"	f
ercMarkCurrSegmentOK	src/erc_api.c	/^void ercMarkCurrSegmentOK(int picSizeX, ercVariables_t *errorVar )$/;"	f
ercOpen	src/erc_api.c	/^ercVariables_t *ercOpen( void )$/;"	f
ercPixConcealIMB	src/erc_do_i.c	/^void ercPixConcealIMB(imgpel *currFrame, int row, int column, int predBlocks[], int frameWidth, int mbWidthInBlocks)$/;"	f
ercReset	src/erc_api.c	/^void ercReset( ercVariables_t *errorVar, int nOfMBs, int numOfSegments, int picSizeX )$/;"	f
ercSegment_s	inc/erc_api.h	/^typedef struct ercSegment_s$/;"	s
ercSegment_t	inc/erc_api.h	/^} ercSegment_t;$/;"	t	typeref:struct:ercSegment_s
ercSetErrorConcealment	src/erc_api.c	/^void ercSetErrorConcealment( ercVariables_t *errorVar, int value )$/;"	f
ercStartSegment	src/erc_api.c	/^void ercStartSegment( int currMBNum, int segment, unsigned int bitPos, ercVariables_t *errorVar )$/;"	f
ercStopSegment	src/erc_api.c	/^void ercStopSegment( int currMBNum, int segment, unsigned int bitPos, ercVariables_t *errorVar )$/;"	f
ercVariables_s	inc/erc_api.h	/^typedef struct ercVariables_s$/;"	s
ercVariables_t	inc/erc_api.h	/^} ercVariables_t;$/;"	t	typeref:struct:ercVariables_s
ercWriteMBMODEandMV	src/image.c	/^void ercWriteMBMODEandMV(struct img_par *img,struct inp_par *inp)$/;"	f
erc_errorVar	src/erc_api.c	/^ercVariables_t *erc_errorVar = NULL;$/;"	v
erc_img	src/erc_do_p.c	/^struct img_par *erc_img;$/;"	v	typeref:struct:img_par
erc_mvperMB	src/erc_api.c	/^int erc_mvperMB;$/;"	v
erc_object_list	src/erc_api.c	/^objectBuffer_t *erc_object_list = NULL;$/;"	v
erc_recfr	src/erc_api.c	/^frame erc_recfr;$/;"	v
error	src/filehandle.c	/^void error(char *text, int code)$/;"	f
errortext	inc/global.h	/^char errortext[ET_SIZE]; \/\/!< buffer for error message for exit with error()$/;"	v
exit_macroblock	src/macroblock.c	/^Boolean exit_macroblock(struct img_par *img,struct inp_par *inp,int eos_bit)$/;"	f
exit_picture	src/image.c	/^void exit_picture()$/;"	f
exit_slice	src/image.c	/^void exit_slice()$/;"	f
exp_golomb_decode_eq_prob	src/cabac.c	/^unsigned int exp_golomb_decode_eq_prob( DecodingEnvironmentPtr dep_dp,$/;"	f
explicit_B_prediction	inc/global.h	/^  int explicit_B_prediction;$/;"	m	struct:img_par
fCorrupted	inc/erc_api.h	/^  int      fCorrupted;$/;"	m	struct:ercSegment_s
fieldModeFilteringFlag	src/loopFilter.c	/^byte mixedModeEdgeFlag, fieldModeFilteringFlag;$/;"	v
field_flag_inference	src/macroblock.c	/^void field_flag_inference()$/;"	f
field_frame	inc/mbuffer.h	/^  byte **     field_frame;         \/\/!< indicates if co_located is field or frame.$/;"	m	struct:colocated_params
field_frame	inc/mbuffer.h	/^  byte **     field_frame;         \/\/!< indicates if co_located is field or frame.$/;"	m	struct:storable_picture
field_pic_flag	inc/global.h	/^   unsigned field_pic_flag;$/;"	m	struct:old_slice_par
field_pic_flag	inc/global.h	/^  unsigned int field_pic_flag;$/;"	m	struct:img_par
field_postprocessing	src/image.c	/^void field_postprocessing(struct img_par *img, struct inp_par *inp)$/;"	f
fill_frame_num_gap	src/mbuffer.c	/^void fill_frame_num_gap(ImageParameters *img)$/;"	f
fill_wp_params	src/image.c	/^void fill_wp_params(struct img_par *img)$/;"	f
find_snr	src/image.c	/^void find_snr($/;"	f
fixed_frame_rate_flag	inc/parsetcommon.h	/^    Boolean      fixed_frame_rate_flag;                          \/\/ u(1)$/;"	m	struct:__anon23
fld_last_contexts	inc/global.h	/^  BiContextType  fld_last_contexts[NUM_BLOCK_TYPES][NUM_LAST_CTX];$/;"	m	struct:__anon17
fld_map_contexts	inc/global.h	/^  BiContextType  fld_map_contexts [NUM_BLOCK_TYPES][NUM_MAP_CTX];$/;"	m	struct:__anon17
flush_direct_output	src/output.c	/^void flush_direct_output(int p_out)$/;"	f
flush_dpb	src/mbuffer.c	/^void flush_dpb()$/;"	f
flush_pending_output	src/output.c	/^void flush_pending_output(int p_out)$/;"	f
forbidden_bit	inc/nalucommon.h	/^  int forbidden_bit;            \/\/! should be always FALSE$/;"	m	struct:__anon20
frame	inc/erc_globals.h	/^} frame;$/;"	t	typeref:struct:__anon1
frame	inc/mbuffer.h	/^  StorablePicture *frame;$/;"	m	struct:frame_store
frame	inc/mbuffer.h	/^  struct storable_picture *frame;         \/\/ for mb aff, if field for referencing the combined frame$/;"	m	struct:storable_picture	typeref:struct:storable_picture::storable_picture
frame_bitoffset	inc/global.h	/^  int           frame_bitoffset;    \/\/!< actual position in the codebuffer, bit-oriented, UVLC only$/;"	m	struct:__anon18
frame_cropping_flag	inc/mbuffer.h	/^  int         frame_cropping_flag;$/;"	m	struct:storable_picture
frame_cropping_flag	inc/parsetcommon.h	/^  Boolean   frame_cropping_flag;                              \/\/ u(1)$/;"	m	struct:__anon25
frame_cropping_rect_bottom_offset	inc/mbuffer.h	/^  int         frame_cropping_rect_bottom_offset;$/;"	m	struct:storable_picture
frame_cropping_rect_bottom_offset	inc/parsetcommon.h	/^    unsigned int frame_cropping_rect_bottom_offset;              \/\/ ue(v)$/;"	m	struct:__anon25
frame_cropping_rect_left_offset	inc/mbuffer.h	/^  int         frame_cropping_rect_left_offset;$/;"	m	struct:storable_picture
frame_cropping_rect_left_offset	inc/parsetcommon.h	/^    unsigned int frame_cropping_rect_left_offset;                \/\/ ue(v)$/;"	m	struct:__anon25
frame_cropping_rect_right_offset	inc/mbuffer.h	/^  int         frame_cropping_rect_right_offset;$/;"	m	struct:storable_picture
frame_cropping_rect_right_offset	inc/parsetcommon.h	/^    unsigned int frame_cropping_rect_right_offset;               \/\/ ue(v)$/;"	m	struct:__anon25
frame_cropping_rect_top_offset	inc/mbuffer.h	/^  int         frame_cropping_rect_top_offset;$/;"	m	struct:storable_picture
frame_cropping_rect_top_offset	inc/parsetcommon.h	/^    unsigned int frame_cropping_rect_top_offset;                 \/\/ ue(v)$/;"	m	struct:__anon25
frame_ctr	inc/global.h	/^  int   frame_ctr;$/;"	m	struct:snr_par
frame_mbs_only_flag	inc/mbuffer.h	/^  int         frame_mbs_only_flag;$/;"	m	struct:storable_picture
frame_mbs_only_flag	inc/parsetcommon.h	/^  Boolean   frame_mbs_only_flag;                              \/\/ u(1)$/;"	m	struct:__anon25
frame_no	inc/global.h	/^int  frame_no;$/;"	v
frame_num	inc/global.h	/^   unsigned frame_num;$/;"	m	struct:old_slice_par
frame_num	inc/global.h	/^  unsigned int frame_num;   \/\/frame_num for this frame$/;"	m	struct:img_par
frame_num	inc/mbuffer.h	/^  unsigned    frame_num;$/;"	m	struct:storable_picture
frame_num	inc/mbuffer.h	/^  unsigned  frame_num;$/;"	m	struct:frame_store
frame_num_wrap	inc/mbuffer.h	/^  int       frame_num_wrap;$/;"	m	struct:frame_store
frame_poc	inc/mbuffer.h	/^  int         frame_poc;$/;"	m	struct:storable_picture
frame_postprocessing	src/image.c	/^void frame_postprocessing(struct img_par *img, struct inp_par *inp)$/;"	f
frame_store	inc/mbuffer.h	/^typedef struct frame_store$/;"	s
frame_to_conceal	inc/global.h	/^  unsigned int frame_to_conceal;$/;"	m	struct:img_par
framepoc	inc/global.h	/^           int framepoc;    \/\/poc of this frame \/\/ POC200301$/;"	m	struct:img_par
free_Partition	src/nal_part.c	/^void free_Partition(Bitstream *currStream)$/;"	f
free_colocated	src/mbuffer.c	/^void free_colocated(ColocatedParams* p)$/;"	f
free_dpb	src/mbuffer.c	/^void free_dpb()$/;"	f
free_frame_store	src/mbuffer.c	/^void free_frame_store(FrameStore* f)$/;"	f
free_global_buffers	src/ldecod.c	/^void free_global_buffers()$/;"	f
free_mem2D	src/memalloc.c	/^void free_mem2D(byte **array2D)$/;"	f
free_mem2Dint	src/memalloc.c	/^void free_mem2Dint(int **array2D)$/;"	f
free_mem2Dint64	src/memalloc.c	/^void free_mem2Dint64(int64 **array2D)$/;"	f
free_mem2Dpel	src/memalloc.c	/^void free_mem2Dpel(imgpel **array2D)$/;"	f
free_mem2Dshort	src/memalloc.c	/^void free_mem2Dshort(short **array2D)$/;"	f
free_mem3D	src/memalloc.c	/^void free_mem3D(byte ***array3D, int frames)$/;"	f
free_mem3Dint	src/memalloc.c	/^void free_mem3Dint(int ***array3D, int frames)$/;"	f
free_mem3Dint64	src/memalloc.c	/^void free_mem3Dint64(int64 ***array3D, int frames)$/;"	f
free_mem3Dpel	src/memalloc.c	/^void free_mem3Dpel(imgpel ***array3D, int frames)$/;"	f
free_mem3Dshort	src/memalloc.c	/^void free_mem3Dshort(short ***array3D, int frames)$/;"	f
free_mem4Dint	src/memalloc.c	/^void free_mem4Dint(int ****array4D, int idx, int frames )$/;"	f
free_mem4Dshort	src/memalloc.c	/^void free_mem4Dshort(short ****array4D, int idx, int frames )$/;"	f
free_ref_pic_list_reordering_buffer	src/mbuffer.c	/^void free_ref_pic_list_reordering_buffer(Slice *currSlice)$/;"	f
free_slice	src/ldecod.c	/^void free_slice(struct inp_par *inp, struct img_par *img)$/;"	f
free_storable_picture	src/mbuffer.c	/^void free_storable_picture(StorablePicture* p)$/;"	f
frm_ref_pic_num	inc/mbuffer.h	/^  int64       frm_ref_pic_num    [MAX_NUM_SLICES][6][MAX_LIST_SIZE];$/;"	m	struct:storable_picture
fs	inc/mbuffer.h	/^  FrameStore  **fs;$/;"	m	struct:decoded_picture_buffer
fs_ltref	inc/mbuffer.h	/^  FrameStore  **fs_ltref;$/;"	m	struct:decoded_picture_buffer
fs_ref	inc/mbuffer.h	/^  FrameStore  **fs_ref;$/;"	m	struct:decoded_picture_buffer
fsync	inc/win32.h	32;"	d
ftime	inc/win32.h	35;"	d
g_nFrame	inc/global.h	/^int  g_nFrame;$/;"	v
gaps_in_frame_num_value_allowed_flag	inc/parsetcommon.h	/^  Boolean   gaps_in_frame_num_value_allowed_flag;             \/\/ u(1)$/;"	m	struct:__anon25
gen_field_ref_ids	src/mbuffer.c	/^void gen_field_ref_ids(StorablePicture *p)$/;"	f
gen_pic_list_from_frame_list	src/mbuffer.c	/^static void gen_pic_list_from_frame_list(PictureStructure currStrcture, FrameStore **fs_list, int list_idx, StorablePicture **list, int *list_size, int long_term)$/;"	f	file:
getAffNeighbour	src/mb_access.c	/^void getAffNeighbour(unsigned int curr_mb_nr, int xN, int yN, int is_chroma, PixelPos *pix)$/;"	f
getChroma4x4Neighbour	src/mb_access.c	/^void getChroma4x4Neighbour (int curr_mb_nr, int block_x, int block_y, PixelPos *pix)$/;"	f
getDpbSize	src/mbuffer.c	/^int getDpbSize()$/;"	f
getLuma4x4Neighbour	src/mb_access.c	/^void getLuma4x4Neighbour (int curr_mb_nr, int block_x, int block_y, PixelPos *pix)$/;"	f
getNeighbour	inc/mb_access.h	/^void (*getNeighbour)(unsigned int curr_mb_nr, int xN, int yN, int is_chroma, PixelPos *pix);$/;"	v
getNonAffNeighbour	src/mb_access.c	/^void getNonAffNeighbour(unsigned int curr_mb_nr, int xN, int yN, int is_chroma, PixelPos *pix)$/;"	f
getParam	inc/erc_do.h	38;"	d
get_block	src/image.c	/^void get_block(int ref_frame, StorablePicture **list, int x_pos, int y_pos, struct img_par *img, int block[BLOCK_SIZE][BLOCK_SIZE])$/;"	f
get_byte	src/biaridecod.c	134;"	d	file:
get_concealed_element	src/errorconcealment.c	/^int get_concealed_element(SyntaxElement *sym)$/;"	f
get_last_ref_pic_from_dpb	src/erc_do_p.c	/^get_last_ref_pic_from_dpb()$/;"	f	file:
get_long_term_pic	src/mbuffer.c	/^static StorablePicture*  get_long_term_pic(int LongtermPicNum)$/;"	f	file:
get_mb_block_pos	inc/mb_access.h	/^void (*get_mb_block_pos) (int mb_addr, int *x, int*y);$/;"	v
get_mb_block_pos_mbaff	src/mb_access.c	/^void get_mb_block_pos_mbaff (int mb_addr, int *x, int*y)$/;"	f
get_mb_block_pos_normal	src/mb_access.c	/^void get_mb_block_pos_normal (int mb_addr, int *x, int*y)$/;"	f
get_mb_pos	src/mb_access.c	/^void get_mb_pos (int mb_addr, int *x, int*y, int is_chroma)$/;"	f
get_mem2D	src/memalloc.c	/^int get_mem2D(byte ***array2D, int rows, int columns)$/;"	f
get_mem2Dint	src/memalloc.c	/^int get_mem2Dint(int ***array2D, int rows, int columns)$/;"	f
get_mem2Dint64	src/memalloc.c	/^int get_mem2Dint64(int64 ***array2D, int rows, int columns)$/;"	f
get_mem2Dpel	src/memalloc.c	/^int get_mem2Dpel(imgpel ***array2D, int rows, int columns)$/;"	f
get_mem2Dshort	src/memalloc.c	/^int get_mem2Dshort(short ***array2D, int rows, int columns)$/;"	f
get_mem3D	src/memalloc.c	/^int get_mem3D(byte ****array3D, int frames, int rows, int columns)$/;"	f
get_mem3Dint	src/memalloc.c	/^int get_mem3Dint(int ****array3D, int frames, int rows, int columns)$/;"	f
get_mem3Dint64	src/memalloc.c	/^int get_mem3Dint64(int64 ****array3D, int frames, int rows, int columns)$/;"	f
get_mem3Dpel	src/memalloc.c	/^int get_mem3Dpel(imgpel ****array3D, int frames, int rows, int columns)$/;"	f
get_mem3Dshort	src/memalloc.c	/^int get_mem3Dshort(short ****array3D, int frames, int rows, int columns)$/;"	f
get_mem4Dint	src/memalloc.c	/^int get_mem4Dint(int *****array4D, int idx, int frames, int rows, int columns )$/;"	f
get_mem4Dshort	src/memalloc.c	/^int get_mem4Dshort(short *****array4D, int idx, int frames, int rows, int columns )$/;"	f
get_pic_from_dpb	src/erc_do_p.c	/^StorablePicture *get_pic_from_dpb(int missingpoc, unsigned int *pos)$/;"	f
get_pic_num_x	src/mbuffer.c	/^static int get_pic_num_x (StorablePicture *p, int difference_of_pic_nums_minus1)$/;"	f	file:
get_short_term_pic	src/mbuffer.c	/^static StorablePicture*  get_short_term_pic(int picNum)$/;"	f	file:
get_smallest_poc	src/mbuffer.c	/^static void get_smallest_poc(int *poc,int * pos)$/;"	f	file:
global_init_done	src/ldecod.c	/^int global_init_done = 0;$/;"	v
height	inc/global.h	/^  int height;$/;"	m	struct:img_par
height_cr	inc/global.h	/^  int height_cr;                              \/\/!< height chroma$/;"	m	struct:img_par
hrd_parameters_t	inc/parsetcommon.h	/^} hrd_parameters_t;$/;"	t	typeref:struct:__anon22
i16mode	inc/global.h	/^  int           i16mode;$/;"	m	struct:macroblock
i64max	inc/ifunctions.h	/^static inline int64 i64max(int64 a, int64 b)$/;"	f
i64max	inc/ifunctions.h	128;"	d
i64min	inc/ifunctions.h	/^static inline int64 i64min(int64 a, int64 b)$/;"	f
i64min	inc/ifunctions.h	127;"	d
iClip1	inc/ifunctions.h	/^static inline int iClip1(int high, int x)$/;"	f
iClip1	inc/ifunctions.h	137;"	d
iClip3	inc/ifunctions.h	/^static inline int iClip3(int low, int high, int x)$/;"	f
iClip3	inc/ifunctions.h	138;"	d
iabs	inc/ifunctions.h	/^static inline int iabs(int x)$/;"	f
iabs	inc/ifunctions.h	129;"	d
idr_flag	inc/global.h	/^   int idr_flag;$/;"	m	struct:old_slice_par
idr_flag	inc/global.h	/^  int idr_flag;$/;"	m	struct:img_par
idr_flag	inc/mbuffer.h	/^  int         idr_flag;$/;"	m	struct:storable_picture
idr_memory_management	src/mbuffer.c	/^static void idr_memory_management(StorablePicture* p)$/;"	f	file:
idr_pic_id	inc/global.h	/^   int idr_pic_id;$/;"	m	struct:old_slice_par
idr_pic_id	inc/global.h	/^  int idr_pic_id;$/;"	m	struct:img_par
idr_psnr_number	inc/global.h	/^  int idr_psnr_number;$/;"	m	struct:img_par
imax	inc/ifunctions.h	/^static inline int imax(int a, int b)$/;"	f
imax	inc/ifunctions.h	124;"	d
img	src/ldecod.c	/^struct img_par    *img;         \/\/!< image parameters$/;"	v	typeref:struct:img_par
img2buf	src/output.c	/^void img2buf (imgpel** imgX, unsigned char* buf, int size_x, int size_y, int symbol_size_in_bytes, int crop_left, int crop_right, int crop_top, int crop_bottom)$/;"	f
imgUV	inc/mbuffer.h	/^  imgpel ***    imgUV;        \/\/!< U and V picture components$/;"	m	struct:storable_picture
imgUV_ref	inc/global.h	/^imgpel ***imgUV_ref;$/;"	v
imgY	inc/mbuffer.h	/^  imgpel **     imgY;         \/\/!< Y picture component$/;"	m	struct:storable_picture
imgY_ref	inc/global.h	/^imgpel **imgY_ref;                              \/\/!< reference frame find snr$/;"	v
img_par	inc/global.h	/^typedef struct img_par$/;"	s
imgpel	inc/global.h	/^typedef unsigned short imgpel;                  \/\/!<  Pixel type definition (16 bit for FRExt)$/;"	t
imin	inc/ifunctions.h	/^static inline int imin(int a, int b)$/;"	f
imin	inc/ifunctions.h	123;"	d
inf	inc/global.h	/^  int           inf;                   \/\/!< info part of UVLC code$/;"	m	struct:syntaxelement
infile	inc/global.h	/^  char infile[100];                       \/\/!< H.264 inputfile$/;"	m	struct:inp_par
init	src/ldecod.c	/^void init(struct img_par *img)  \/\/!< image parameters$/;"	f
init_conf	src/ldecod.c	/^void init_conf(struct inp_par *inp, char *config_filename)$/;"	f
init_contexts	src/context_ini.c	/^init_contexts (struct img_par* img)$/;"	f
init_decoding_engine_IPCM	src/macroblock.c	/^void init_decoding_engine_IPCM(struct img_par *img)$/;"	f
init_done	inc/mbuffer.h	/^  int           init_done;$/;"	m	struct:decoded_picture_buffer
init_dpb	src/mbuffer.c	/^void init_dpb()$/;"	f
init_frext	src/ldecod.c	/^void init_frext(struct img_par *img)  \/\/!< image parameters$/;"	f
init_global_buffers	src/ldecod.c	/^int init_global_buffers()$/;"	f
init_lists	src/mbuffer.c	/^void init_lists(int currSliceType, PictureStructure currPicStructure)$/;"	f
init_lists_for_non_reference_loss	src/erc_do_p.c	/^void init_lists_for_non_reference_loss(int currSliceType, PictureStructure currPicStructure)$/;"	f
init_macroblock	src/macroblock.c	/^void init_macroblock(struct img_par *img)$/;"	f
init_mbaff_lists	src/mbuffer.c	/^void init_mbaff_lists()$/;"	f
init_node	src/erc_do_p.c	/^struct concealment_node * init_node( StorablePicture* picture, int missingpoc )$/;"	f
init_old_slice	src/image.c	/^void init_old_slice()$/;"	f
init_out_buffer	src/output.c	/^void init_out_buffer()$/;"	f
init_picture	src/image.c	/^void init_picture(struct img_par *img, struct inp_par *inp)$/;"	f
initial_cpb_removal_delay_length_minus1	inc/parsetcommon.h	/^  unsigned int initial_cpb_removal_delay_length_minus1;          \/\/ u(5)$/;"	m	struct:__anon22
inline	inc/win32.h	39;"	d
inline	inc/win32.h	50;"	d
inp_par	inc/global.h	/^struct inp_par$/;"	s
input	src/ldecod.c	/^struct inp_par    *input;       \/\/!< input parameters from input configuration file$/;"	v	typeref:struct:inp_par
insert_picture_in_dpb	src/mbuffer.c	/^static void insert_picture_in_dpb(FrameStore* fs, StorablePicture* p)$/;"	f	file:
int64	inc/win32.h	/^typedef __int64   int64;$/;"	t
int64	inc/win32.h	/^typedef long long int64;$/;"	t
interpret_buffering_period_info	src/sei.c	/^void interpret_buffering_period_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_deblocking_filter_display_preference_info	src/sei.c	/^void interpret_deblocking_filter_display_preference_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_dec_ref_pic_marking_repetition_info	src/sei.c	/^void interpret_dec_ref_pic_marking_repetition_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_filler_payload_info	src/sei.c	/^void interpret_filler_payload_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_film_grain_characteristics_info	src/sei.c	/^void interpret_film_grain_characteristics_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_full_frame_freeze_info	src/sei.c	/^void interpret_full_frame_freeze_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_full_frame_freeze_release_info	src/sei.c	/^void interpret_full_frame_freeze_release_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_full_frame_snapshot_info	src/sei.c	/^void interpret_full_frame_snapshot_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_mb_mode_B	src/macroblock.c	/^void interpret_mb_mode_B(struct img_par *img)$/;"	f
interpret_mb_mode_I	src/macroblock.c	/^void interpret_mb_mode_I(struct img_par *img)$/;"	f
interpret_mb_mode_P	src/macroblock.c	/^void interpret_mb_mode_P(struct img_par *img)$/;"	f
interpret_mb_mode_SI	src/macroblock.c	/^void interpret_mb_mode_SI(struct img_par *img)$/;"	f
interpret_motion_constrained_slice_group_set_info	src/sei.c	/^void interpret_motion_constrained_slice_group_set_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_pan_scan_rect_info	src/sei.c	/^void interpret_pan_scan_rect_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_picture_timing_info	src/sei.c	/^void interpret_picture_timing_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_progressive_refinement_end_info	src/sei.c	/^void interpret_progressive_refinement_end_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_progressive_refinement_start_info	src/sei.c	/^void interpret_progressive_refinement_start_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_recovery_point_info	src/sei.c	/^void interpret_recovery_point_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_reserved_info	src/sei.c	/^void interpret_reserved_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_scene_information	src/sei.c	/^void interpret_scene_information( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_spare_pic	src/sei.c	/^void interpret_spare_pic( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_stereo_video_info_info	src/sei.c	/^void interpret_stereo_video_info_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_subsequence_characteristics_info	src/sei.c	/^void interpret_subsequence_characteristics_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_subsequence_info	src/sei.c	/^void interpret_subsequence_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_subsequence_layer_characteristics_info	src/sei.c	/^void interpret_subsequence_layer_characteristics_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_user_data_registered_itu_t_t35_info	src/sei.c	/^void interpret_user_data_registered_itu_t_t35_info( byte* payload, int size, ImageParameters *img )$/;"	f
interpret_user_data_unregistered_info	src/sei.c	/^void interpret_user_data_unregistered_info( byte* payload, int size, ImageParameters *img )$/;"	f
intra_block	inc/global.h	/^  int *intra_block;$/;"	m	struct:img_par
intrapred	src/block.c	/^int intrapred( struct img_par *img,  \/\/!< image parameters$/;"	f
intrapred8x8	src/transform8x8.c	/^int intrapred8x8( struct img_par *img,  \/\/!< image parameters$/;"	f
intrapred_chroma	src/block.c	/^void intrapred_chroma(struct img_par *img, int uv)$/;"	f
intrapred_luma_16x16	src/block.c	/^int intrapred_luma_16x16(struct img_par *img, \/\/!< image parameters$/;"	f
ipr_contexts	inc/global.h	/^  BiContextType  ipr_contexts [NUM_IPR_CTX];$/;"	m	struct:__anon17
ipredmode	inc/global.h	/^  byte **ipredmode;                            \/\/!< prediction type [90][74]$/;"	m	struct:img_par
isBlock	inc/erc_do.h	32;"	d
isSplitted	inc/erc_do.h	28;"	d
is_intra_block	inc/global.h	/^  int is_intra_block;$/;"	m	struct:img_par
is_long_ref	src/mbuffer.c	/^int is_long_ref(StorablePicture *s)$/;"	f
is_long_term	inc/mbuffer.h	/^  byte        is_long_term;$/;"	m	struct:colocated_params
is_long_term	inc/mbuffer.h	/^  int         is_long_term;$/;"	m	struct:storable_picture
is_long_term	inc/mbuffer.h	/^  int       is_long_term;           \/\/!< 0=not used for ref; 1=top used; 2=bottom used; 3=both fields (or frame) used$/;"	m	struct:frame_store
is_long_term_reference	src/mbuffer.c	/^static int is_long_term_reference(FrameStore* fs)$/;"	f	file:
is_new_picture	src/image.c	/^int is_new_picture()$/;"	f
is_non_existent	inc/mbuffer.h	/^  int       is_non_existent;$/;"	m	struct:frame_store
is_orig_reference	inc/mbuffer.h	/^  int       is_orig_reference;      \/\/!< original marking by nal_ref_idc: 0=not used for ref; 1=top used; 2=bottom used; 3=both fields (or frame) used$/;"	m	struct:frame_store
is_output	inc/mbuffer.h	/^  int         is_output;$/;"	m	struct:storable_picture
is_output	inc/mbuffer.h	/^  int       is_output;$/;"	m	struct:frame_store
is_reference	inc/mbuffer.h	/^  int       is_reference;           \/\/!< 0=not used for ref; 1=top used; 2=bottom used; 3=both fields (or frame) used$/;"	m	struct:frame_store
is_short_ref	src/mbuffer.c	/^int is_short_ref(StorablePicture *s)$/;"	f
is_short_term_reference	src/mbuffer.c	/^static int is_short_term_reference(FrameStore* fs)$/;"	f	file:
is_skip	inc/global.h	/^  int           is_skip;$/;"	m	struct:macroblock
is_used	inc/mbuffer.h	/^  int       is_used;                \/\/!< 0=empty; 1=top; 2=bottom; 3=both fields (or frame)$/;"	m	struct:frame_store
is_used_for_reference	src/mbuffer.c	/^static int is_used_for_reference(FrameStore* fs)$/;"	f	file:
is_v_block	inc/global.h	/^  int is_v_block;$/;"	m	struct:img_par
isign	inc/ifunctions.h	/^static inline int isign(int x)$/;"	f
isign	inc/ifunctions.h	131;"	d
isignab	inc/ifunctions.h	/^static inline int isignab(int a, int b)$/;"	f
isignab	inc/ifunctions.h	132;"	d
itrans	src/block.c	/^void itrans(struct img_par *img, \/\/!< image parameters$/;"	f
itrans8x8	src/transform8x8.c	/^void itrans8x8(struct img_par *img, \/\/!< image parameters$/;"	f
itrans_2	src/block.c	/^void itrans_2(struct img_par *img) \/\/!< image parameters$/;"	f
itrans_sp	src/block.c	/^void itrans_sp(struct img_par *img,  \/\/!< image parameters$/;"	f
itrans_sp_chroma	src/block.c	/^void itrans_sp_chroma(struct img_par *img,int ll)$/;"	f
k	inc/global.h	/^  int           k;                     \/\/!< CABAC context for coeff_count,uv$/;"	m	struct:syntaxelement
last_contexts	inc/global.h	/^  BiContextType  last_contexts[NUM_BLOCK_TYPES][NUM_LAST_CTX];$/;"	m	struct:__anon17
last_dquant	src/cabac.c	/^int last_dquant = 0;$/;"	v
last_has_mmco_5	inc/global.h	/^  int last_has_mmco_5;$/;"	m	struct:img_par
last_out_fs	inc/erc_api.h	/^FrameStore *last_out_fs;$/;"	v
last_output_poc	inc/mbuffer.h	/^  int           last_output_poc;$/;"	m	struct:decoded_picture_buffer
last_pic_bottom_field	inc/global.h	/^  int last_pic_bottom_field;$/;"	m	struct:img_par
last_picture	inc/mbuffer.h	/^  FrameStore   *last_picture;$/;"	m	struct:decoded_picture_buffer
last_ref_pic_poc	inc/global.h	/^  int last_ref_pic_poc;$/;"	m	struct:img_par
len	inc/global.h	/^  int           len;                   \/\/!< length of code$/;"	m	struct:syntaxelement
len	inc/nalucommon.h	/^  unsigned len;                 \/\/! Length of the NAL unit (Excluding the start code, which does not belong to the NALU)$/;"	m	struct:__anon20
level_idc	inc/parsetcommon.h	/^  unsigned  int level_idc;                                        \/\/ u(8)$/;"	m	struct:__anon25
linfo_cbp_inter	src/vlc.c	/^void linfo_cbp_inter(int len,int info,int *cbp, int *dummy)$/;"	f
linfo_cbp_intra	src/vlc.c	/^void linfo_cbp_intra(int len,int info,int *cbp, int *dummy)$/;"	f
linfo_levrun_c2x2	src/vlc.c	/^void linfo_levrun_c2x2(int len, int info, int *level, int *irun)$/;"	f
linfo_levrun_inter	src/vlc.c	/^void linfo_levrun_inter(int len, int info, int *level, int *irun)$/;"	f
linfo_se	src/vlc.c	/^void linfo_se(int len,  int info, int *value1, int *dummy)$/;"	f
linfo_ue	src/vlc.c	/^void linfo_ue(int len, int info, int *value1, int *dummy)$/;"	f
listX	src/mbuffer.c	/^StorablePicture **listX[6];$/;"	v
listXsize	src/mbuffer.c	/^int listXsize[6];$/;"	v
log2_max_frame_num_minus4	inc/parsetcommon.h	/^  unsigned int log2_max_frame_num_minus4;                        \/\/ ue(v)$/;"	m	struct:__anon25
log2_max_mv_length_horizontal	inc/parsetcommon.h	/^    unsigned int log2_max_mv_length_horizontal;                  \/\/ ue(v)$/;"	m	struct:__anon23
log2_max_mv_length_vertical	inc/parsetcommon.h	/^    unsigned int log2_max_mv_length_vertical;                    \/\/ ue(v)$/;"	m	struct:__anon23
log2_max_pic_order_cnt_lsb_minus4	inc/parsetcommon.h	/^  unsigned log2_max_pic_order_cnt_lsb_minus4;                 \/\/ ue(v)$/;"	m	struct:__anon25
long_term_frame_idx	inc/global.h	/^  int long_term_frame_idx;$/;"	m	struct:DecRefPicMarking_s
long_term_frame_idx	inc/mbuffer.h	/^  int         long_term_frame_idx;$/;"	m	struct:storable_picture
long_term_frame_idx	inc/mbuffer.h	/^  int       long_term_frame_idx;$/;"	m	struct:frame_store
long_term_pic_idx_l0	inc/global.h	/^  int                 *long_term_pic_idx_l0;$/;"	m	struct:__anon19
long_term_pic_idx_l1	inc/global.h	/^  int                 *long_term_pic_idx_l1;$/;"	m	struct:__anon19
long_term_pic_num	inc/global.h	/^  int long_term_pic_num;$/;"	m	struct:DecRefPicMarking_s
long_term_pic_num	inc/mbuffer.h	/^  int         long_term_pic_num;$/;"	m	struct:storable_picture
long_term_reference_flag	inc/global.h	/^  int long_term_reference_flag;$/;"	m	struct:img_par
long_term_reference_flag	inc/mbuffer.h	/^  int         long_term_reference_flag;$/;"	m	struct:storable_picture
lossless_qpprime_flag	inc/global.h	/^  int lossless_qpprime_flag;$/;"	m	struct:img_par
low_delay_hrd_flag	inc/parsetcommon.h	/^    Boolean      low_delay_hrd_flag;                             \/\/ u(1)$/;"	m	struct:__anon23
lseek	inc/win32.h	31;"	d
ltime_end	inc/global.h	/^  time_t ltime_end;                 \/\/ for time measurement$/;"	m	struct:img_par
ltime_start	inc/global.h	/^  time_t ltime_start;               \/\/ for time measurement$/;"	m	struct:img_par
ltref_frames_in_buffer	inc/mbuffer.h	/^  unsigned      ltref_frames_in_buffer;$/;"	m	struct:decoded_picture_buffer
luma_log2_weight_denom	inc/global.h	/^  unsigned int luma_log2_weight_denom;$/;"	m	struct:img_par
luma_transform_size_8x8_flag	inc/global.h	/^  int           luma_transform_size_8x8_flag;$/;"	m	struct:macroblock
m	inc/rtp.h	/^  unsigned int m;          \/\/!< Marker bit$/;"	m	struct:__anon26
m7	inc/global.h	/^  int m7[16][16];                             \/\/!< final 4x4 block. Extended to 16x16 for ABT$/;"	m	struct:img_par
mabs	inc/erc_api.h	42;"	d
macroblock	inc/global.h	/^typedef struct macroblock$/;"	s
main	src/ldecod.c	/^int main(int argc, char **argv)$/;"	f
malloc_slice	src/ldecod.c	/^void malloc_slice(struct inp_par *inp, struct img_par *img)$/;"	f
map_contexts	inc/global.h	/^  BiContextType  map_contexts [NUM_BLOCK_TYPES][NUM_MAP_CTX];$/;"	m	struct:__anon17
mapping	inc/global.h	/^  void    (*mapping)(int len, int info, int *value1, int *value2);$/;"	m	struct:syntaxelement
mark_pic_long_term	src/mbuffer.c	/^static void mark_pic_long_term(StorablePicture* p, int long_term_frame_idx, int picNumX)$/;"	f	file:
matrix_coefficients	inc/parsetcommon.h	/^      unsigned int matrix_coefficients;                          \/\/ u(8)$/;"	m	struct:__anon23
max_bits_per_mb_denom	inc/parsetcommon.h	/^    unsigned int max_bits_per_mb_denom;                          \/\/ ue(v)$/;"	m	struct:__anon23
max_bytes_per_pic_denom	inc/parsetcommon.h	/^    unsigned int max_bytes_per_pic_denom;                        \/\/ ue(v)$/;"	m	struct:__anon23
max_c2	src/cabac.c	/^static const int max_c2       [] = { 4,  4,  4,  4,  4,  4,  3,  4,  3,  3}; \/\/ 9$/;"	v	file:
max_dec_frame_buffering	inc/parsetcommon.h	/^    unsigned int max_dec_frame_buffering;                        \/\/ ue(v)$/;"	m	struct:__anon23
max_imgpel_value	inc/global.h	/^  int max_imgpel_value;                       \/\/!< max value that one luma picture element (pixel) can take (depends on pic_unit_bitdepth)$/;"	m	struct:img_par
max_imgpel_value_uv	inc/global.h	/^  int max_imgpel_value_uv;                    \/\/!< max value that one chroma picture element (pixel) can take (depends on pic_unit_bitdepth)$/;"	m	struct:img_par
max_long_term_frame_idx_plus1	inc/global.h	/^  int max_long_term_frame_idx_plus1;$/;"	m	struct:DecRefPicMarking_s
max_long_term_pic_idx	inc/mbuffer.h	/^  int           max_long_term_pic_idx;$/;"	m	struct:decoded_picture_buffer
max_part_nr	inc/global.h	/^  int                 max_part_nr;$/;"	m	struct:__anon19
max_size	inc/nalucommon.h	/^  unsigned max_size;            \/\/! Nal Unit Buffer size$/;"	m	struct:__anon20
max_slice_id	inc/mbuffer.h	/^  short       max_slice_id;$/;"	m	struct:storable_picture
maxpos	src/cabac.c	/^static const int maxpos       [] = {16, 15, 64, 32, 32, 16,  4, 15,  8, 16};$/;"	v	file:
mbAddrA	inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAddrB	inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAddrC	inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAddrD	inc/global.h	/^  int mbAddrA, mbAddrB, mbAddrC, mbAddrD;$/;"	m	struct:macroblock
mbAvailA	inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mbAvailB	inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mbAvailC	inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mbAvailD	inc/global.h	/^  int mbAvailA, mbAvailB, mbAvailC, mbAvailD;$/;"	m	struct:macroblock
mb_adaptive_frame_field_flag	inc/mbuffer.h	/^  int         mb_adaptive_frame_field_flag;$/;"	m	struct:colocated_params
mb_adaptive_frame_field_flag	inc/parsetcommon.h	/^    Boolean   mb_adaptive_frame_field_flag;                   \/\/ u(1)$/;"	m	struct:__anon25
mb_addr	inc/global.h	/^  int mb_addr;$/;"	m	struct:pix_pos
mb_aff_contexts	inc/global.h	/^  BiContextType mb_aff_contexts  [NUM_MB_AFF_CTX];$/;"	m	struct:__anon16
mb_available_left	inc/global.h	/^  struct macroblock   *mb_available_left; \/\/!< pointer to neighboring MB (CABAC)$/;"	m	struct:macroblock	typeref:struct:macroblock::macroblock
mb_available_up	inc/global.h	/^  struct macroblock   *mb_available_up;   \/\/!< pointer to neighboring MB (CABAC)$/;"	m	struct:macroblock	typeref:struct:macroblock::macroblock
mb_cr_size_x	inc/global.h	/^  int mb_cr_size_x;$/;"	m	struct:img_par
mb_cr_size_x_blk	inc/global.h	/^  int mb_cr_size_x_blk;$/;"	m	struct:img_par
mb_cr_size_y	inc/global.h	/^  int mb_cr_size_y;$/;"	m	struct:img_par
mb_cr_size_y_blk	inc/global.h	/^  int mb_cr_size_y_blk;$/;"	m	struct:img_par
mb_data	inc/global.h	/^  Macroblock          *mb_data;                \/\/!< array containing all MBs of a whole frame$/;"	m	struct:img_par
mb_field	inc/global.h	/^  int           mb_field;$/;"	m	struct:macroblock
mb_field	inc/mbuffer.h	/^  byte  *      mb_field;      \/\/!< field macroblock indicator$/;"	m	struct:storable_picture
mb_is_available	src/mb_access.c	/^int mb_is_available(int mbAddr, int currMbAddr)$/;"	f
mb_size	inc/global.h	/^  int mb_size[3][2];                         \/\/!< component macroblock dimensions$/;"	m	struct:img_par
mb_size_blk	inc/global.h	/^  int mb_size_blk[3][2];                         \/\/!< component macroblock dimensions$/;"	m	struct:img_par
mb_type	inc/global.h	/^  int           mb_type;$/;"	m	struct:macroblock
mb_type_contexts	inc/global.h	/^  BiContextType mb_type_contexts [4][NUM_MB_TYPE_CTX];$/;"	m	struct:__anon16
mb_x	inc/global.h	/^  int mb_x;$/;"	m	struct:img_par
mb_y	inc/global.h	/^  int mb_y;$/;"	m	struct:img_par
memory_management_control_operation	inc/global.h	/^  int memory_management_control_operation;$/;"	m	struct:DecRefPicMarking_s
missingpocs	inc/erc_api.h	/^    int  missingpocs;$/;"	m	struct:concealment_node
mixedModeEdgeFlag	src/loopFilter.c	/^byte mixedModeEdgeFlag, fieldModeFilteringFlag;$/;"	v
mm_assign_long_term_frame_idx	src/mbuffer.c	/^static void mm_assign_long_term_frame_idx(StorablePicture* p, int difference_of_pic_nums_minus1, int long_term_frame_idx)$/;"	f	file:
mm_mark_current_picture_long_term	src/mbuffer.c	/^static void mm_mark_current_picture_long_term(StorablePicture *p, int long_term_frame_idx)$/;"	f	file:
mm_unmark_all_long_term_for_reference	src/mbuffer.c	/^static void mm_unmark_all_long_term_for_reference ()$/;"	f	file:
mm_unmark_all_short_term_for_reference	src/mbuffer.c	/^static void mm_unmark_all_short_term_for_reference ()$/;"	f	file:
mm_unmark_long_term_for_reference	src/mbuffer.c	/^static void mm_unmark_long_term_for_reference(StorablePicture *p, int long_term_pic_num)$/;"	f	file:
mm_unmark_short_term_for_reference	src/mbuffer.c	/^static void mm_unmark_short_term_for_reference(StorablePicture *p, int difference_of_pic_nums_minus1)$/;"	f	file:
mm_update_max_long_term_frame_idx	src/mbuffer.c	/^void mm_update_max_long_term_frame_idx(int max_long_term_frame_idx_plus1)$/;"	f
mmax	inc/erc_api.h	43;"	d
mmin	inc/erc_api.h	44;"	d
model_number	inc/global.h	/^  int model_number;$/;"	m	struct:img_par
more_rbsp_data	src/vlc.c	/^int more_rbsp_data (byte buffer[],int totbitoffset,int bytecount)$/;"	f
mot_ctx	inc/global.h	/^  MotionInfoContexts  *mot_ctx;      \/\/!< pointer to struct of context models for use in CABAC$/;"	m	struct:__anon19
motion_vectors_over_pic_boundaries_flag	inc/parsetcommon.h	/^    Boolean      motion_vectors_over_pic_boundaries_flag;        \/\/ u(1)$/;"	m	struct:__anon23
moving_block	inc/mbuffer.h	/^  byte  **    moving_block;$/;"	m	struct:colocated_params
moving_block	inc/mbuffer.h	/^  byte **     moving_block;$/;"	m	struct:storable_picture
mpr	inc/global.h	/^  imgpel mpr[16][16];                         \/\/!< predicted block$/;"	m	struct:img_par
msse_u	inc/global.h	/^  float msse_u;                                \/\/!< Average SSE U$/;"	m	struct:snr_par
msse_v	inc/global.h	/^  float msse_v;                                \/\/!< Average SSE V$/;"	m	struct:snr_par
msse_y	inc/global.h	/^  float msse_y;                                \/\/!< Average SSE Y$/;"	m	struct:snr_par
mv	inc/erc_globals.h	/^  int mv[3];        \/\/!< motion vectors in 1\/4 pixel units: mvx = mv[0], mvy = mv[1],$/;"	m	struct:__anon2
mv	inc/mbuffer.h	/^  short ****   mv;            \/\/!< motion vector       [list][subblock_y][subblock_x][component]$/;"	m	struct:storable_picture
mv	inc/mbuffer.h	/^  short ****  mv;            \/\/!< motion vector       [list][subblock_y][subblock_x][component]$/;"	m	struct:colocated_params
mv_res_contexts	inc/global.h	/^  BiContextType mv_res_contexts  [2][NUM_MV_RES_CTX];$/;"	m	struct:__anon16
mvd	inc/global.h	/^  int           mvd[2][BLOCK_MULTIPLE][BLOCK_MULTIPLE][2];      \/\/!< indices correspond to [forw,backw][block_y][block_x][x,y]$/;"	m	struct:macroblock
mvscale	inc/global.h	/^  int mvscale[6][MAX_REFERENCE_PICTURES];$/;"	m	struct:img_par
nOfCorruptedSegments	inc/erc_api.h	/^  int   nOfCorruptedSegments;$/;"	m	struct:ercVariables_s
nOfMBs	inc/erc_api.h	/^  int   nOfMBs;$/;"	m	struct:ercVariables_s
nOfSegments	inc/erc_api.h	/^  int     nOfSegments;$/;"	m	struct:ercVariables_s
nal_hrd_parameters	inc/parsetcommon.h	/^    hrd_parameters_t nal_hrd_parameters;                      \/\/ hrd_paramters_t$/;"	m	struct:__anon23
nal_hrd_parameters_present_flag	inc/parsetcommon.h	/^  Boolean      nal_hrd_parameters_present_flag;                  \/\/ u(1)$/;"	m	struct:__anon23
nal_ref_idc	inc/global.h	/^   int nal_ref_idc;$/;"	m	struct:old_slice_par
nal_reference_idc	inc/global.h	/^  int nal_reference_idc;                       \/\/!< nal_reference_idc from NAL unit$/;"	m	struct:img_par
nal_reference_idc	inc/nalucommon.h	/^  int nal_reference_idc;        \/\/! NALU_PRIORITY_xxxx$/;"	m	struct:__anon20
nal_startcode_follows	inc/global.h	/^int  (*nal_startcode_follows) (struct img_par*, int );$/;"	v
nal_unit_type	inc/nalucommon.h	/^  int nal_unit_type;            \/\/! NALU_TYPE_xxxx$/;"	m	struct:__anon20
newframe	inc/global.h	/^  int newframe;$/;"	m	struct:img_par
next	inc/erc_api.h	/^    struct concealment_node *next;$/;"	m	struct:concealment_node	typeref:struct:concealment_node::concealment_node
next_header	inc/global.h	/^  int                 next_header;$/;"	m	struct:__anon19
no_mem_exit	src/memalloc.c	/^void no_mem_exit(char *where)$/;"	f
no_output_of_prior_pics_flag	inc/global.h	/^  int no_output_of_prior_pics_flag;$/;"	m	struct:img_par
no_output_of_prior_pics_flag	inc/mbuffer.h	/^  int         no_output_of_prior_pics_flag;$/;"	m	struct:storable_picture
no_reference_picture	src/mbuffer.c	/^StorablePicture *no_reference_picture; \/\/!< dummy storable picture for recovery point$/;"	v
non_conforming_stream	src/image.c	/^int non_conforming_stream;$/;"	v
non_existing	inc/mbuffer.h	/^  int         non_existing;$/;"	m	struct:storable_picture
num_blk8x8_uv	inc/global.h	/^  int num_blk8x8_uv;$/;"	m	struct:img_par
num_cdc_coeff	inc/global.h	/^  int num_cdc_coeff;$/;"	m	struct:img_par
num_dec_mb	inc/global.h	/^  unsigned int num_dec_mb;$/;"	m	struct:img_par
num_ref_frames	inc/mbuffer.h	/^  int           num_ref_frames;$/;"	m	struct:decoded_picture_buffer
num_ref_frames	inc/parsetcommon.h	/^  unsigned int num_ref_frames;                                   \/\/ ue(v)$/;"	m	struct:__anon25
num_ref_frames_in_pic_order_cnt_cycle	inc/parsetcommon.h	/^    unsigned int num_ref_frames_in_pic_order_cnt_cycle;          \/\/ ue(v)$/;"	m	struct:__anon25
num_ref_idx_l0_active	inc/global.h	/^  int num_ref_idx_l0_active;             \/\/!< number of forward reference$/;"	m	struct:img_par
num_ref_idx_l0_active_minus1	inc/parsetcommon.h	/^  unsigned  int num_ref_idx_l0_active_minus1;                     \/\/ ue(v)$/;"	m	struct:__anon24
num_ref_idx_l1_active	inc/global.h	/^  int num_ref_idx_l1_active;             \/\/!< number of backward reference$/;"	m	struct:img_par
num_ref_idx_l1_active_minus1	inc/parsetcommon.h	/^  unsigned  int num_ref_idx_l1_active_minus1;                     \/\/ ue(v)$/;"	m	struct:__anon24
num_reorder_frames	inc/parsetcommon.h	/^    unsigned int num_reorder_frames;                             \/\/ ue(v)$/;"	m	struct:__anon23
num_slice_group_map_units_minus1	inc/parsetcommon.h	/^      unsigned  int num_slice_group_map_units_minus1;             \/\/ ue(v)$/;"	m	struct:__anon24
num_slice_groups_minus1	inc/parsetcommon.h	/^  unsigned  int num_slice_groups_minus1;                          \/\/ ue(v)$/;"	m	struct:__anon24
num_units_in_tick	inc/parsetcommon.h	/^    unsigned  int num_units_in_tick;                              \/\/ u(32)$/;"	m	struct:__anon23
number	inc/global.h	/^  int number;                                 \/\/!< frame number$/;"	m	struct:img_par
nz_coeff	inc/global.h	/^  int ***nz_coeff;$/;"	m	struct:img_par
objectBuffer_t	inc/erc_globals.h	/^} objectBuffer_t;$/;"	t	typeref:struct:__anon2
offset_for_non_ref_pic	inc/parsetcommon.h	/^    int     offset_for_non_ref_pic;                         \/\/ se(v)$/;"	m	struct:__anon25
offset_for_ref_frame	inc/parsetcommon.h	/^      int   offset_for_ref_frame[MAXnum_ref_frames_in_pic_order_cnt_cycle];   \/\/ se(v)$/;"	m	struct:__anon25
offset_for_top_to_bottom_field	inc/parsetcommon.h	/^    int     offset_for_top_to_bottom_field;                 \/\/ se(v)$/;"	m	struct:__anon25
oldFrameSizeInMbs	inc/global.h	/^  unsigned int oldFrameSizeInMbs;$/;"	m	struct:img_par
old_seq	inc/rtp.h	/^  unsigned int old_seq;    \/\/!< to detect wether packets were lost$/;"	m	struct:__anon26
old_slice	src/image.c	/^OldSliceParams old_slice;$/;"	v
old_slice_par	inc/global.h	/^typedef struct old_slice_par$/;"	s
one_contexts	inc/global.h	/^  BiContextType  one_contexts [NUM_BLOCK_TYPES][NUM_ONE_CTX];$/;"	m	struct:__anon17
open	inc/win32.h	27;"	d
out_buffer	src/output.c	/^FrameStore* out_buffer;$/;"	v
outfile	inc/global.h	/^  char outfile[100];                      \/\/!< Decoded YUV 4:2:0 output$/;"	m	struct:inp_par
output_one_frame_from_dpb	src/mbuffer.c	/^static void output_one_frame_from_dpb()$/;"	f	file:
overscan_appropriate_flag	inc/parsetcommon.h	/^    Boolean      overscan_appropriate_flag;                      \/\/ u(1)$/;"	m	struct:__anon23
overscan_info_present_flag	inc/parsetcommon.h	/^  Boolean      overscan_info_present_flag;                       \/\/ u(1)$/;"	m	struct:__anon23
p	inc/rtp.h	/^  unsigned int p;          \/\/!< Padding bit, Padding MUST NOT be used$/;"	m	struct:__anon26
p_log	inc/global.h	/^FILE *p_log;                    \/\/!< SNR file$/;"	v
p_out	inc/global.h	/^int p_out;                    \/\/!< file descriptor to output YUV file$/;"	v
p_ref	inc/global.h	/^int p_ref;                    \/\/!< pointer to input original reference YUV file file$/;"	v
p_trace	inc/global.h	/^FILE *p_trace;$/;"	v
packet	inc/rtp.h	/^  byte *       packet;     \/\/!< complete packet including header and payload$/;"	m	struct:__anon26
packlen	inc/rtp.h	/^  unsigned int packlen;    \/\/!< length of packet, typically paylen+12$/;"	m	struct:__anon26
partArr	inc/global.h	/^  DataPartition       *partArr;      \/\/!< array of partitions$/;"	m	struct:__anon19
paylen	inc/rtp.h	/^  unsigned int paylen;     \/\/!< length of payload in bytes$/;"	m	struct:__anon26
payload	inc/rtp.h	/^  byte *       payload;    \/\/!< the payload including payload headers$/;"	m	struct:__anon26
peekSyntaxElement_UVLC	src/vlc.c	/^int peekSyntaxElement_UVLC(SyntaxElement *sym, struct img_par *img, struct datapartition *dP)$/;"	f
pending_output	src/output.c	/^StorablePicture *pending_output = NULL;$/;"	v
pending_output_state	src/output.c	/^int              pending_output_state = FRAME;$/;"	v
pic_height_in_map_units_minus1	inc/parsetcommon.h	/^  unsigned int pic_height_in_map_units_minus1;                   \/\/ ue(v)$/;"	m	struct:__anon25
pic_init_qp_minus26	inc/parsetcommon.h	/^  int       pic_init_qp_minus26;                              \/\/ se(v)$/;"	m	struct:__anon24
pic_init_qs_minus26	inc/parsetcommon.h	/^  int       pic_init_qs_minus26;                              \/\/ se(v)$/;"	m	struct:__anon24
pic_num	inc/mbuffer.h	/^  int         pic_num;$/;"	m	struct:storable_picture
pic_oder_cnt_lsb	inc/global.h	/^   unsigned pic_oder_cnt_lsb;$/;"	m	struct:old_slice_par
pic_order_cnt_lsb	inc/global.h	/^  unsigned int pic_order_cnt_lsb;$/;"	m	struct:img_par
pic_order_cnt_type	inc/parsetcommon.h	/^  unsigned int pic_order_cnt_type;$/;"	m	struct:__anon25
pic_order_present_flag	inc/parsetcommon.h	/^  Boolean      pic_order_present_flag;                           \/\/ u(1)$/;"	m	struct:__anon24
pic_parameter_set_id	inc/global.h	/^  int                 pic_parameter_set_id;   \/\/!<the ID of the picture parameter set the slice is reffering to$/;"	m	struct:__anon19
pic_parameter_set_id	inc/parsetcommon.h	/^  unsigned  int pic_parameter_set_id;                             \/\/ ue(v)$/;"	m	struct:__anon24
pic_parameter_set_rbsp_t	inc/parsetcommon.h	/^} pic_parameter_set_rbsp_t;$/;"	t	typeref:struct:__anon24
pic_scaling_list_present_flag	inc/parsetcommon.h	/^  int       pic_scaling_list_present_flag[8];                 \/\/ u(1)$/;"	m	struct:__anon24
pic_scaling_matrix_present_flag	inc/parsetcommon.h	/^  Boolean   pic_scaling_matrix_present_flag;                  \/\/ u(1)$/;"	m	struct:__anon24
pic_struct_present_flag	inc/parsetcommon.h	/^  Boolean      pic_struct_present_flag;                        \/\/ u(1)$/;"	m	struct:__anon23
pic_unit_bitsize_on_disk	inc/global.h	/^  int pic_unit_bitsize_on_disk;$/;"	m	struct:img_par
pic_width_in_mbs_minus1	inc/parsetcommon.h	/^  unsigned int pic_width_in_mbs_minus1;                          \/\/ ue(v)$/;"	m	struct:__anon25
picture	inc/erc_api.h	/^    StorablePicture* picture;$/;"	m	struct:concealment_node
picture_order	src/header.c	/^int picture_order(struct img_par *img)$/;"	f
picture_type	inc/global.h	/^  int                 picture_type;  \/\/!< picture type$/;"	m	struct:__anon19
pixMeanInterpolateBlock	src/erc_do_i.c	/^static void pixMeanInterpolateBlock( imgpel *src[], imgpel *block, int blockSize, int frameWidth )$/;"	f	file:
pix_c_x	inc/global.h	/^  int pix_c_x;$/;"	m	struct:img_par
pix_c_y	inc/global.h	/^  int pix_c_y;$/;"	m	struct:img_par
pix_pos	inc/global.h	/^typedef struct pix_pos$/;"	s
pix_x	inc/global.h	/^  int pix_x;$/;"	m	struct:img_par
pix_y	inc/global.h	/^  int pix_y;$/;"	m	struct:img_par
poc	inc/mbuffer.h	/^  int         poc;$/;"	m	struct:storable_picture
poc	inc/mbuffer.h	/^  int       poc;$/;"	m	struct:frame_store
poc_gap	inc/global.h	/^  int poc_gap;$/;"	m	struct:img_par
poc_gap	inc/global.h	/^  int poc_gap;$/;"	m	struct:inp_par
poc_scale	inc/global.h	/^  int poc_scale;$/;"	m	struct:inp_par
pocs_in_dpb	inc/erc_api.h	/^int pocs_in_dpb[100];$/;"	v
pos2ctx_last	src/cabac.c	/^static const int* pos2ctx_last    [] = {pos2ctx_last4x4, pos2ctx_last4x4, pos2ctx_last8x8, pos2ctx_last8x4,$/;"	v	file:
pos2ctx_last2x4c	src/cabac.c	/^static const int  pos2ctx_last2x4c[] = { 0,  0,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_last4x4	src/cabac.c	/^static const int  pos2ctx_last4x4 [] = { 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_last4x4c	src/cabac.c	/^static const int  pos2ctx_last4x4c[] = { 0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_last8x4	src/cabac.c	/^static const int  pos2ctx_last8x4 [] = { 0,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,$/;"	v	file:
pos2ctx_last8x8	src/cabac.c	/^static const int  pos2ctx_last8x8 [] = { 0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,$/;"	v	file:
pos2ctx_map	src/cabac.c	/^static const int* pos2ctx_map    [] = {pos2ctx_map4x4, pos2ctx_map4x4, pos2ctx_map8x8, pos2ctx_map8x4,$/;"	v	file:
pos2ctx_map2x4c	src/cabac.c	/^static const int  pos2ctx_map2x4c[] = { 0,  0,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_map4x4	src/cabac.c	/^static const int  pos2ctx_map4x4 [] = { 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 14}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_map4x4c	src/cabac.c	/^static const int  pos2ctx_map4x4c[] = { 0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2}; \/\/ 15 CTX$/;"	v	file:
pos2ctx_map4x8i	src/cabac.c	/^static const int  pos2ctx_map4x8i[] = { 0,  1,  1,  1,  2,  3,  3,  4,  4,  4,  5,  6,  2,  7,  7,  8,$/;"	v	file:
pos2ctx_map8x4	src/cabac.c	/^static const int  pos2ctx_map8x4 [] = { 0,  1,  2,  3,  4,  5,  7,  8,  9, 10, 11,  9,  8,  6,  7,  8,$/;"	v	file:
pos2ctx_map8x4i	src/cabac.c	/^static const int  pos2ctx_map8x4i[] = { 0,  1,  2,  3,  4,  5,  6,  3,  4,  5,  6,  3,  4,  7,  6,  8,$/;"	v	file:
pos2ctx_map8x8	src/cabac.c	/^static const int  pos2ctx_map8x8 [] = { 0,  1,  2,  3,  4,  5,  5,  4,  4,  3,  3,  4,  4,  4,  5,  5,$/;"	v	file:
pos2ctx_map8x8i	src/cabac.c	/^static const int  pos2ctx_map8x8i[] = { 0,  1,  1,  2,  2,  3,  3,  4,  5,  6,  7,  7,  7,  8,  4,  5,$/;"	v	file:
pos2ctx_map_int	src/cabac.c	/^static const int* pos2ctx_map_int[] = {pos2ctx_map4x4, pos2ctx_map4x4, pos2ctx_map8x8i,pos2ctx_map8x4i,$/;"	v	file:
pos_x	inc/global.h	/^  int pos_x;$/;"	m	struct:pix_pos
pos_y	inc/global.h	/^  int pos_y;$/;"	m	struct:pix_pos
pps_id	inc/global.h	/^   int pps_id;$/;"	m	struct:old_slice_par
pps_is_equal	src/parsetcommon.c	/^int pps_is_equal(pic_parameter_set_rbsp_t *pps1, pic_parameter_set_rbsp_t *pps2)$/;"	f
pre_frame_num	inc/global.h	/^  unsigned int pre_frame_num;           \/\/!< store the frame_num in the last decoded slice. For detecting gap in frame_num.$/;"	m	struct:img_par
pred_weight_table	src/header.c	/^static void pred_weight_table()$/;"	f	file:
predict_nnz	src/macroblock.c	/^int predict_nnz(struct img_par *img, int i,int j)$/;"	f
predict_nnz_chroma	src/macroblock.c	/^int predict_nnz_chroma(struct img_par *img, int i,int j)$/;"	f
prevFrameYCondition	inc/erc_api.h	/^  int   *prevFrameYCondition;$/;"	m	struct:ercVariables_s
previous_frame_num	inc/global.h	/^unsigned int previous_frame_num;          \/\/!< frame number of previous slice$/;"	v
print_list	src/erc_do_p.c	/^void print_list( struct concealment_node *ptr )$/;"	f
print_node	src/erc_do_p.c	/^void print_node( struct concealment_node *ptr )$/;"	f
profile_idc	inc/global.h	/^  int profile_idc;$/;"	m	struct:img_par
profile_idc	inc/parsetcommon.h	/^  unsigned  int profile_idc;                                      \/\/ u(8)$/;"	m	struct:__anon25
psnr_number	inc/global.h	/^  int psnr_number;$/;"	m	struct:img_par
pstruct_next_P	inc/global.h	/^  int pstruct_next_P;$/;"	m	struct:img_par
pt	inc/rtp.h	/^  unsigned int pt;         \/\/!< 7 bits, Payload Type, dynamically established$/;"	m	struct:__anon26
qmatrix	inc/global.h	/^int  *qmatrix[8];$/;"	v
qp	inc/global.h	/^  int                 qp;$/;"	m	struct:__anon19
qp	inc/global.h	/^  int           qp;                  \/\/!< QP luma$/;"	m	struct:macroblock
qp	inc/global.h	/^  int qp;                                     \/\/!< quant for the current frame$/;"	m	struct:img_par
qp	inc/mbuffer.h	/^  int         qp;$/;"	m	struct:storable_picture
qpc	inc/global.h	/^  int           qpc[2];              \/\/!< QP chroma$/;"	m	struct:macroblock
qpsp	inc/global.h	/^  int qpsp;                                   \/\/!< quant for SP-picture predicted frame$/;"	m	struct:img_par
quad	inc/global.h	/^  int *quad;$/;"	m	struct:img_par
quant8_inter_default	src/block.c	/^int quant8_inter_default[64] = {$/;"	v
quant8_intra_default	src/block.c	/^int quant8_intra_default[64] = {$/;"	v
quant8_org	src/block.c	/^int quant8_org[64] = { \/\/to be use if no q matrix is chosen$/;"	v
quant_coef	src/block.c	/^static const int quant_coef[6][4][4] = {$/;"	v	file:
quant_coef8	src/transform8x8.c	/^const int quant_coef8[6][8][8] =$/;"	v
quant_inter_default	src/block.c	/^int quant_inter_default[16] = {$/;"	v
quant_intra_default	src/block.c	/^int quant_intra_default[16] = {$/;"	v
quant_org	src/block.c	/^int quant_org[16] = { \/\/to be use if no q matrix is chosen$/;"	v
rLPS_table_64x4	src/biaridecod.c	/^const byte rLPS_table_64x4[64][4]=$/;"	v
read	inc/win32.h	29;"	d
readB8_typeInfo_CABAC	src/cabac.c	/^void readB8_typeInfo_CABAC (SyntaxElement *se,$/;"	f
readCBP_CABAC	src/cabac.c	/^void readCBP_CABAC(SyntaxElement *se,$/;"	f
readCBPandCoeffsFromNAL	src/macroblock.c	/^void readCBPandCoeffsFromNAL(struct img_par *img,struct inp_par *inp)$/;"	f
readCIPredMode_CABAC	src/cabac.c	/^void readCIPredMode_CABAC(SyntaxElement *se,$/;"	f
readCoeff4x4_CAVLC	src/macroblock.c	/^void readCoeff4x4_CAVLC (struct img_par *img,struct inp_par *inp,$/;"	f
readDquant_CABAC	src/cabac.c	/^void readDquant_CABAC( SyntaxElement *se,$/;"	f
readFieldModeInfo_CABAC	src/cabac.c	/^void readFieldModeInfo_CABAC( SyntaxElement *se,$/;"	f
readIPCMBytes_CABAC	src/cabac.c	/^void readIPCMBytes_CABAC(SyntaxElement *sym, Bitstream *currStream)$/;"	f
readIPCMcoeffsFromNAL	src/macroblock.c	/^void readIPCMcoeffsFromNAL(struct img_par *img, struct inp_par *inp, struct datapartition *dP)$/;"	f
readIntraPredMode_CABAC	src/cabac.c	/^void readIntraPredMode_CABAC( SyntaxElement *se,$/;"	f
readLumaCoeff8x8_CABAC	src/macroblock.c	/^void readLumaCoeff8x8_CABAC (struct img_par *img,struct inp_par *inp, int b8)$/;"	f
readMB_skip_flagInfo_CABAC	src/cabac.c	/^void readMB_skip_flagInfo_CABAC( SyntaxElement *se,$/;"	f
readMB_transform_size_flag_CABAC	src/cabac.c	/^void readMB_transform_size_flag_CABAC( SyntaxElement *se,$/;"	f
readMB_typeInfo_CABAC	src/cabac.c	/^void readMB_typeInfo_CABAC( SyntaxElement *se,$/;"	f
readMVD_CABAC	src/cabac.c	/^void readMVD_CABAC( SyntaxElement *se,$/;"	f
readMotionInfoFromNAL	src/macroblock.c	/^void readMotionInfoFromNAL (struct img_par *img, struct inp_par *inp)$/;"	f
readRefFrame_CABAC	src/cabac.c	/^void readRefFrame_CABAC( SyntaxElement *se,$/;"	f
readRunLevel_CABAC	src/cabac.c	/^void readRunLevel_CABAC (SyntaxElement  *se,$/;"	f
readSlice	inc/global.h	/^  int     (*readSlice)(struct img_par *, struct inp_par *);$/;"	m	struct:__anon19
readSyntaxElement	inc/global.h	/^  int     (*readSyntaxElement)(SyntaxElement *, struct img_par *, struct datapartition *);$/;"	m	struct:datapartition
readSyntaxElement_CABAC	src/cabac.c	/^int readSyntaxElement_CABAC(SyntaxElement *se, struct img_par *img, DataPartition *this_dataPart)$/;"	f
readSyntaxElement_FLC	src/vlc.c	/^int readSyntaxElement_FLC(SyntaxElement *sym, Bitstream *currStream)$/;"	f
readSyntaxElement_Intra4x4PredictionMode	src/vlc.c	/^int readSyntaxElement_Intra4x4PredictionMode(SyntaxElement *sym, struct img_par *img,struct datapartition *dP)$/;"	f
readSyntaxElement_Level_VLC0	src/vlc.c	/^int readSyntaxElement_Level_VLC0(SyntaxElement *sym, struct datapartition *dP)$/;"	f
readSyntaxElement_Level_VLCN	src/vlc.c	/^int readSyntaxElement_Level_VLCN(SyntaxElement *sym, int vlc, struct datapartition *dP)$/;"	f
readSyntaxElement_NumCoeffTrailingOnes	src/vlc.c	/^int readSyntaxElement_NumCoeffTrailingOnes(SyntaxElement *sym,  DataPartition *dP,$/;"	f
readSyntaxElement_NumCoeffTrailingOnesChromaDC	src/vlc.c	/^int readSyntaxElement_NumCoeffTrailingOnesChromaDC(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_Run	src/vlc.c	/^int readSyntaxElement_Run(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_TotalZeros	src/vlc.c	/^int readSyntaxElement_TotalZeros(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_TotalZerosChromaDC	src/vlc.c	/^int readSyntaxElement_TotalZerosChromaDC(SyntaxElement *sym,  DataPartition *dP)$/;"	f
readSyntaxElement_UVLC	src/vlc.c	/^int readSyntaxElement_UVLC(SyntaxElement *sym, struct img_par *img, struct datapartition *dP)$/;"	f
readSyntaxElement_VLC	src/vlc.c	/^int readSyntaxElement_VLC(SyntaxElement *sym, Bitstream *currStream)$/;"	f
read_and_store_CBP_block_bit	src/cabac.c	/^int read_and_store_CBP_block_bit (Macroblock              *currMB,$/;"	f
read_ipred_modes	src/macroblock.c	/^void read_ipred_modes(struct img_par *img,struct inp_par *inp)$/;"	f
read_len	inc/global.h	/^  int           read_len;           \/\/!< actual position in the codebuffer, CABAC only$/;"	m	struct:__anon18
read_new_slice	src/image.c	/^int read_new_slice()$/;"	f
read_one_macroblock	src/macroblock.c	/^int read_one_macroblock(struct img_par *img,struct inp_par *inp)$/;"	f
read_significance_map	src/cabac.c	/^int read_significance_map (Macroblock              *currMB,$/;"	f
read_significant_coefficients	src/cabac.c	/^void read_significant_coefficients (DecodingEnvironmentPtr  dep_dp,$/;"	f
reading	inc/global.h	/^  void  (*reading)(struct syntaxelement *, struct img_par *, DecodingEnvironmentPtr);$/;"	m	struct:syntaxelement
recovery_flag	src/output.c	/^int recovery_flag = 0;$/;"	v
recovery_frame	inc/mbuffer.h	/^  unsigned    recovery_frame;$/;"	m	struct:storable_picture
recovery_frame	inc/mbuffer.h	/^  unsigned  recovery_frame;$/;"	m	struct:frame_store
recovery_frame_cnt	inc/global.h	/^  int recovery_frame_cnt;$/;"	m	struct:img_par
recovery_frame_num	inc/global.h	/^  int recovery_frame_num;$/;"	m	struct:img_par
recovery_poc	inc/global.h	/^  int recovery_poc;$/;"	m	struct:img_par
recovery_point	inc/global.h	/^  int recovery_point;$/;"	m	struct:img_par
recovery_point_found	inc/global.h	/^  int recovery_point_found;$/;"	m	struct:img_par
redundant_pic_cnt	inc/global.h	/^  int redundant_pic_cnt;$/;"	m	struct:img_par
redundant_pic_cnt_present_flag	inc/parsetcommon.h	/^  Boolean   redundant_pic_cnt_present_flag;                   \/\/ u(1)$/;"	m	struct:__anon24
redundant_slice_ref_idx	inc/global.h	/^int redundant_slice_ref_idx;     \/\/!< reference index of redundant slice$/;"	v
ref_flag	inc/global.h	/^int ref_flag[17];                \/\/!< 0: i-th previous frame is incorrect$/;"	v
ref_frames_in_buffer	inc/mbuffer.h	/^  unsigned      ref_frames_in_buffer;$/;"	m	struct:decoded_picture_buffer
ref_id	inc/mbuffer.h	/^  int64 ***    ref_id;        \/\/!< reference picture identifier [list][subblock_y][subblock_x]$/;"	m	struct:storable_picture
ref_idx	inc/mbuffer.h	/^  char  ***    ref_idx;       \/\/!< reference picture   [list][subblock_y][subblock_x]$/;"	m	struct:storable_picture
ref_idx	inc/mbuffer.h	/^  char  ***   ref_idx;       \/\/!< reference picture   [list][subblock_y][subblock_x]$/;"	m	struct:colocated_params
ref_no_contexts	inc/global.h	/^  BiContextType ref_no_contexts  [2][NUM_REF_NO_CTX];$/;"	m	struct:__anon16
ref_offset	inc/global.h	/^  int ref_offset;$/;"	m	struct:inp_par
ref_pic_id	inc/mbuffer.h	/^  int64 ***    ref_pic_id;    \/\/!< reference picture identifier [list][subblock_y][subblock_x]$/;"	m	struct:storable_picture
ref_pic_id	inc/mbuffer.h	/^  int64 ***   ref_pic_id;    \/\/!< reference picture identifier [list][subblock_y][subblock_x]$/;"	m	struct:colocated_params
ref_pic_list_reordering	src/header.c	/^static void ref_pic_list_reordering()$/;"	f	file:
ref_pic_list_reordering_flag_l0	inc/global.h	/^  int                 ref_pic_list_reordering_flag_l0;$/;"	m	struct:__anon19
ref_pic_list_reordering_flag_l1	inc/global.h	/^  int                 ref_pic_list_reordering_flag_l1;$/;"	m	struct:__anon19
ref_pic_num	inc/mbuffer.h	/^  int64       ref_pic_num        [MAX_NUM_SLICES][6][MAX_LIST_SIZE];$/;"	m	struct:storable_picture
ref_pic_num	inc/mbuffer.h	/^  int64       ref_pic_num[6][MAX_LIST_SIZE];$/;"	m	struct:colocated_params
ref_poc_gap	inc/global.h	/^  int ref_poc_gap;$/;"	m	struct:img_par
ref_poc_gap	inc/global.h	/^  int ref_poc_gap;$/;"	m	struct:inp_par
reffile	inc/global.h	/^  char reffile[100];                      \/\/!< Optional YUV 4:2:0 reference file for SNR measurement$/;"	m	struct:inp_par
regionMode	inc/erc_globals.h	/^  byte regionMode;  \/\/!< region mode as above$/;"	m	struct:__anon2
remove_frame_from_dpb	src/mbuffer.c	/^static void remove_frame_from_dpb(int pos)$/;"	f	file:
remove_unused_frame_from_dpb	src/mbuffer.c	/^static int remove_unused_frame_from_dpb()$/;"	f	file:
reorder_lists	src/image.c	/^void reorder_lists(int currSliceType, Slice * currSlice)$/;"	f
reorder_long_term	src/mbuffer.c	/^static void reorder_long_term(StorablePicture **RefPicListX, int num_ref_idx_lX_active_minus1, int LongTermPicNum, int *refIdxLX)$/;"	f	file:
reorder_ref_pic_list	src/mbuffer.c	/^void reorder_ref_pic_list(StorablePicture **list, int *list_size, int num_ref_idx_lX_active_minus1, int *reordering_of_pic_nums_idc, int *abs_diff_pic_num_minus1, int *long_term_pic_idx)$/;"	f
reorder_short_term	src/mbuffer.c	/^static void reorder_short_term(StorablePicture **RefPicListX, int num_ref_idx_lX_active_minus1, int picNumLX, int *refIdxLX)$/;"	f	file:
reordering_of_pic_nums_idc_l0	inc/global.h	/^  int                 *reordering_of_pic_nums_idc_l0;$/;"	m	struct:__anon19
reordering_of_pic_nums_idc_l1	inc/global.h	/^  int                 *reordering_of_pic_nums_idc_l1;$/;"	m	struct:__anon19
report	src/ldecod.c	/^void report(struct inp_par *inp, struct img_par *img, struct snr_par *snr)$/;"	f
reset_coeffs	src/macroblock.c	/^void reset_coeffs()$/;"	f
reset_ec_flags	src/errorconcealment.c	/^void reset_ec_flags()$/;"	f
reset_wp_params	src/image.c	/^void reset_wp_params(struct img_par *img)$/;"	f
rshift_rnd	inc/ifunctions.h	/^static inline int rshift_rnd(int x, int a)$/;"	f
rshift_rnd	inc/ifunctions.h	133;"	d
rshift_rnd_sf	inc/ifunctions.h	/^static inline int rshift_rnd_sf(int x, int a)$/;"	f
rshift_rnd_sf	inc/ifunctions.h	135;"	d
rshift_rnd_us	inc/ifunctions.h	/^static inline unsigned int rshift_rnd_us(unsigned int x, unsigned int a)$/;"	f
rshift_rnd_us	inc/ifunctions.h	134;"	d
rshift_rnd_us_sf	inc/ifunctions.h	/^static inline unsigned int rshift_rnd_us_sf(unsigned int x, unsigned int a)$/;"	f
rshift_rnd_us_sf	inc/ifunctions.h	136;"	d
run_length_minus1	inc/parsetcommon.h	/^      unsigned  int run_length_minus1[MAXnum_slice_groups_minus1]; \/\/ ue(v)$/;"	m	struct:__anon24
sar_height	inc/parsetcommon.h	/^      unsigned int sar_height;                                   \/\/ u(16)$/;"	m	struct:__anon23
sar_width	inc/parsetcommon.h	/^      unsigned int sar_width;                                    \/\/ u(16)$/;"	m	struct:__anon23
se_v	src/vlc.c	/^int se_v (char *tracestring, Bitstream *bitstream)$/;"	f
second_chroma_qp_index_offset	inc/parsetcommon.h	/^  int       second_chroma_qp_index_offset;                    \/\/ se(v)$/;"	m	struct:__anon24
segments	inc/erc_api.h	/^  ercSegment_t *segments;$/;"	m	struct:ercVariables_s
seq	inc/rtp.h	/^  unsigned int seq;        \/*!< RTP sequence number, incremented by one for$/;"	m	struct:__anon26
seq_parameter_set_id	inc/parsetcommon.h	/^  unsigned  int seq_parameter_set_id;                             \/\/ ue(v)$/;"	m	struct:__anon24
seq_parameter_set_id	inc/parsetcommon.h	/^  unsigned  int seq_parameter_set_id;                             \/\/ ue(v)$/;"	m	struct:__anon25
seq_parameter_set_rbsp_t	inc/parsetcommon.h	/^} seq_parameter_set_rbsp_t;$/;"	t	typeref:struct:__anon25
seq_scaling_list_present_flag	inc/parsetcommon.h	/^  int      seq_scaling_list_present_flag[8];                  \/\/ u(1)$/;"	m	struct:__anon25
seq_scaling_matrix_present_flag	inc/parsetcommon.h	/^  Boolean  seq_scaling_matrix_present_flag;                   \/\/ u(1)$/;"	m	struct:__anon25
set_chroma_qp	src/macroblock.c	/^void set_chroma_qp(Macroblock* currMB)$/;"	f
set_ec_flag	src/errorconcealment.c	/^int set_ec_flag($/;"	f
set_ref_pic_num	src/image.c	/^void set_ref_pic_num()$/;"	f
siblock	inc/global.h	/^  int **siblock;$/;"	m	struct:img_par
silent	inc/global.h	/^  int silent;$/;"	m	struct:inp_par
size	inc/mbuffer.h	/^  unsigned      size;$/;"	m	struct:decoded_picture_buffer
size_x	inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
size_x	inc/mbuffer.h	/^  int         size_x, size_y;$/;"	m	struct:colocated_params
size_x_cr	inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
size_x_cr_m1	inc/mbuffer.h	/^  int         size_x_m1, size_y_m1, size_x_cr_m1, size_y_cr_m1;$/;"	m	struct:storable_picture
size_x_m1	inc/mbuffer.h	/^  int         size_x_m1, size_y_m1, size_x_cr_m1, size_y_cr_m1;$/;"	m	struct:storable_picture
size_y	inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
size_y	inc/mbuffer.h	/^  int         size_x, size_y;$/;"	m	struct:colocated_params
size_y_cr	inc/mbuffer.h	/^  int         size_x, size_y, size_x_cr, size_y_cr;$/;"	m	struct:storable_picture
size_y_cr_m1	inc/mbuffer.h	/^  int         size_x_m1, size_y_m1, size_x_cr_m1, size_y_cr_m1;$/;"	m	struct:storable_picture
size_y_m1	inc/mbuffer.h	/^  int         size_x_m1, size_y_m1, size_x_cr_m1, size_y_cr_m1;$/;"	m	struct:storable_picture
skip_flag	inc/global.h	/^  int           skip_flag;$/;"	m	struct:macroblock
slice_group_change_cycle	inc/global.h	/^  int slice_group_change_cycle;$/;"	m	struct:img_par
slice_group_change_direction_flag	inc/parsetcommon.h	/^      Boolean   slice_group_change_direction_flag;            \/\/ u(1)$/;"	m	struct:__anon24
slice_group_change_rate_minus1	inc/parsetcommon.h	/^      unsigned  int slice_group_change_rate_minus1;               \/\/ ue(v)$/;"	m	struct:__anon24
slice_group_id	inc/parsetcommon.h	/^      unsigned  int *slice_group_id;                              \/\/ complete MBAmap u(v)$/;"	m	struct:__anon24
slice_group_map_type	inc/parsetcommon.h	/^    unsigned  int slice_group_map_type;                        \/\/ ue(v)$/;"	m	struct:__anon24
slice_id	inc/mbuffer.h	/^  short **     slice_id;      \/\/!< reference picture   [mb_x][mb_y]$/;"	m	struct:storable_picture
slice_nr	inc/global.h	/^  int           slice_nr;$/;"	m	struct:macroblock
slice_qp_delta	inc/global.h	/^  int                 slice_qp_delta;$/;"	m	struct:__anon19
slice_qp_delta	inc/mbuffer.h	/^  int         slice_qp_delta;$/;"	m	struct:storable_picture
slice_type	inc/mbuffer.h	/^  int         slice_type;$/;"	m	struct:storable_picture
sliding_window_memory_management	src/mbuffer.c	/^static void sliding_window_memory_management(StorablePicture* p)$/;"	f	file:
sliding_window_poc_management	src/erc_do_p.c	/^void sliding_window_poc_management(StorablePicture *p)$/;"	f
snprintf	inc/win32.h	26;"	d
snr	src/ldecod.c	/^struct snr_par    *snr;         \/\/!< statistics$/;"	v	typeref:struct:snr_par
snr_par	inc/global.h	/^struct snr_par$/;"	s
snr_u	inc/global.h	/^  float snr_u;                                 \/\/!< current U SNR$/;"	m	struct:snr_par
snr_u1	inc/global.h	/^  float snr_u1;                                \/\/!< SNR U(dB) first frame$/;"	m	struct:snr_par
snr_ua	inc/global.h	/^  float snr_ua;                                \/\/!< Average SNR U(dB) remaining frames$/;"	m	struct:snr_par
snr_v	inc/global.h	/^  float snr_v;                                 \/\/!< current V SNR$/;"	m	struct:snr_par
snr_v1	inc/global.h	/^  float snr_v1;                                \/\/!< SNR V(dB) first frame$/;"	m	struct:snr_par
snr_va	inc/global.h	/^  float snr_va;                                \/\/!< Average SNR V(dB) remaining frames$/;"	m	struct:snr_par
snr_y	inc/global.h	/^  float snr_y;                                 \/\/!< current Y SNR$/;"	m	struct:snr_par
snr_y1	inc/global.h	/^  float snr_y1;                                \/\/!< SNR Y(dB) first frame$/;"	m	struct:snr_par
snr_ya	inc/global.h	/^  float snr_ya;                                \/\/!< Average SNR Y(dB) remaining frames$/;"	m	struct:snr_par
sp_switch	inc/global.h	/^  int sp_switch;                              \/\/!< 1 for switching sp, 0 for normal sp$/;"	m	struct:img_par
sps_is_equal	src/parsetcommon.c	/^int sps_is_equal(seq_parameter_set_rbsp_t *sps1, seq_parameter_set_rbsp_t *sps2)$/;"	f
sse_u	inc/global.h	/^  float sse_u;                                 \/\/!< SSE U$/;"	m	struct:snr_par
sse_v	inc/global.h	/^  float sse_v;                                 \/\/!< SSE V$/;"	m	struct:snr_par
sse_y	inc/global.h	/^  float sse_y;                                 \/\/!< SSE Y$/;"	m	struct:snr_par
ssrc	inc/rtp.h	/^  unsigned int ssrc;       \/\/!< Synchronization Source, chosen randomly$/;"	m	struct:__anon26
startMBPos	inc/erc_api.h	/^  int      startMBPos;$/;"	m	struct:ercSegment_s
start_macroblock	src/macroblock.c	/^void start_macroblock(struct img_par *img,int CurrentMBInScanOrder)$/;"	f
start_mb_nr	inc/global.h	/^  int                 start_mb_nr;   \/\/!< MUST be set by NAL even in case of ei_flag == 1$/;"	m	struct:__anon19
startcodeprefix_len	inc/nalucommon.h	/^  int startcodeprefix_len;      \/\/! 4 for parameter sets and first slice in picture, 3 for everything else (suggested)$/;"	m	struct:__anon20
state	inc/global.h	/^  unsigned short state;         \/\/ index into state-table CP$/;"	m	struct:__anon15
storable_picture	inc/mbuffer.h	/^typedef struct storable_picture$/;"	s
store_picture_in_dpb	src/mbuffer.c	/^void store_picture_in_dpb(StorablePicture* p)$/;"	f
strcasecmp	inc/win32.h	24;"	d
streamBuffer	inc/global.h	/^  byte          *streamBuffer;      \/\/!< actual codebuffer for read bytes$/;"	m	struct:__anon18
structure	inc/global.h	/^  PictureStructure    structure;     \/\/!< Identify picture structure type$/;"	m	struct:__anon19
structure	inc/global.h	/^  int structure;                               \/\/!< Identify picture structure type$/;"	m	struct:img_par
structure	inc/mbuffer.h	/^  PictureStructure structure;$/;"	m	struct:storable_picture
subblk_offset_x	inc/macroblock.h	/^const unsigned char subblk_offset_x[3][8][4] =$/;"	v
subblk_offset_y	inc/macroblock.h	/^const unsigned char subblk_offset_y[3][8][4] =$/;"	v
subblock_x	inc/global.h	/^  int subblock_x;$/;"	m	struct:img_par
subblock_y	inc/global.h	/^  int subblock_y;$/;"	m	struct:img_par
symbolCount	src/cabac.c	/^int symbolCount = 0;$/;"	v
syntaxelement	inc/global.h	/^typedef struct syntaxelement$/;"	s
tell	inc/win32.h	33;"	d
testEndian	src/output.c	/^int testEndian()$/;"	f
tex_ctx	inc/global.h	/^  TextureInfoContexts *tex_ctx;      \/\/!< pointer to struct of context models for use in CABAC$/;"	m	struct:__anon19
time_offset_length	inc/parsetcommon.h	/^  unsigned int time_offset_length;                               \/\/ u(5)$/;"	m	struct:__anon22
time_scale	inc/parsetcommon.h	/^    unsigned  int time_scale;                                     \/\/ u(32)$/;"	m	struct:__anon23
timestamp	inc/rtp.h	/^  unsigned int timestamp;  \/\/!< timestamp, 27 MHz for H.264$/;"	m	struct:__anon26
timing_info_present_flag	inc/parsetcommon.h	/^  Boolean      timing_info_present_flag;                         \/\/ u(1)$/;"	m	struct:__anon23
top_field	inc/mbuffer.h	/^  StorablePicture *top_field;$/;"	m	struct:frame_store
top_field	inc/mbuffer.h	/^  struct storable_picture *top_field;     \/\/ for mb aff, if frame for referencing the top field$/;"	m	struct:storable_picture	typeref:struct:storable_picture::storable_picture
top_left	inc/parsetcommon.h	/^      unsigned  int top_left[MAXnum_slice_groups_minus1];         \/\/ ue(v)$/;"	m	struct:__anon24
top_moving_block	inc/mbuffer.h	/^  byte **     top_moving_block;$/;"	m	struct:colocated_params
top_mv	inc/mbuffer.h	/^  short ****  top_mv;            \/\/!< motion vector       [list][subblock_y][subblock_x][component]$/;"	m	struct:colocated_params
top_poc	inc/mbuffer.h	/^  int         top_poc;$/;"	m	struct:storable_picture
top_ref_idx	inc/mbuffer.h	/^  char  ***   top_ref_idx;       \/\/!< reference picture   [list][subblock_y][subblock_x]$/;"	m	struct:colocated_params
top_ref_pic_id	inc/mbuffer.h	/^  int64 ***   top_ref_pic_id;    \/\/!< reference picture identifier [list][subblock_y][subblock_x]$/;"	m	struct:colocated_params
top_ref_pic_num	inc/mbuffer.h	/^  int64       top_ref_pic_num    [MAX_NUM_SLICES][6][MAX_LIST_SIZE];$/;"	m	struct:storable_picture
top_ref_pic_num	inc/mbuffer.h	/^  int64       top_ref_pic_num[6][MAX_LIST_SIZE];$/;"	m	struct:colocated_params
toppoc	inc/global.h	/^           int toppoc;      \/\/poc for this top field \/\/ POC200301$/;"	m	struct:img_par
tot_time	inc/global.h	/^time_t tot_time;$/;"	v
tr	inc/global.h	/^  int tr;                                     \/\/!< temporal reference, 8 bit, wrapps at 255$/;"	m	struct:img_par
tracebits	src/filehandle.c	/^void tracebits($/;"	f
tracebits2	src/filehandle.c	/^void tracebits2($/;"	f
tracestring	inc/global.h	/^  char          tracestring[TRACESTRING_SIZE]; \/\/!< trace string$/;"	m	struct:syntaxelement
transfer_characteristics	inc/parsetcommon.h	/^      unsigned int transfer_characteristics;                     \/\/ u(8)$/;"	m	struct:__anon23
transform_8x8_mode_flag	inc/parsetcommon.h	/^  Boolean   transform_8x8_mode_flag;                          \/\/ u(1)$/;"	m	struct:__anon24
transform_size_contexts	inc/global.h	/^  BiContextType transform_size_contexts [NUM_TRANSFORM_SIZE_CTX];$/;"	m	struct:__anon16
tstruct_end	inc/global.h	/^  struct _timeb tstruct_end;$/;"	m	struct:img_par	typeref:struct:img_par::_timeb
tstruct_end	inc/global.h	/^  struct timeb tstruct_end;$/;"	m	struct:img_par	typeref:struct:img_par::timeb
tstruct_start	inc/global.h	/^  struct _timeb tstruct_start;$/;"	m	struct:img_par	typeref:struct:img_par::_timeb
tstruct_start	inc/global.h	/^  struct timeb tstruct_start;$/;"	m	struct:img_par	typeref:struct:img_par::timeb
type	inc/global.h	/^  int           type;                  \/\/!< type of syntax element for data part.$/;"	m	struct:syntaxelement
type	inc/global.h	/^  int type;                                   \/\/!< image type INTER\/INTRA$/;"	m	struct:img_par
type2ctx_abs	src/cabac.c	/^static const int type2ctx_abs [] = { 0,  1,  2,  3,  3,  4,  5,  6,  5,  5}; \/\/ 7$/;"	v	file:
type2ctx_bcbp	src/cabac.c	/^static const int type2ctx_bcbp[] = { 0,  1,  2,  2,  3,  4,  5,  6,  5,  5}; \/\/ 7$/;"	v	file:
type2ctx_last	src/cabac.c	/^static const int type2ctx_last[] = { 0,  1,  2,  3,  4,  5,  6,  7,  6,  6}; \/\/ 8$/;"	v	file:
type2ctx_map	src/cabac.c	/^static const int type2ctx_map [] = { 0,  1,  2,  3,  4,  5,  6,  7,  6,  6}; \/\/ 8$/;"	v	file:
type2ctx_one	src/cabac.c	/^static const int type2ctx_one [] = { 0,  1,  2,  3,  3,  4,  5,  6,  5,  5}; \/\/ 7$/;"	v	file:
uCondition	inc/erc_api.h	/^  int     *uCondition;$/;"	m	struct:ercVariables_s
u_1	src/vlc.c	/^Boolean u_1 (char *tracestring, Bitstream *bitstream)$/;"	f
u_v	src/vlc.c	/^int u_v (int LenInBits, char*tracestring, Bitstream *bitstream)$/;"	f
ue_v	src/vlc.c	/^int ue_v (char *tracestring, Bitstream *bitstream)$/;"	f
unary_bin_decode	src/cabac.c	/^unsigned int unary_bin_decode(DecodingEnvironmentPtr dep_dp,$/;"	f
unary_bin_max_decode	src/cabac.c	/^unsigned int unary_bin_max_decode(DecodingEnvironmentPtr dep_dp,$/;"	f
unary_exp_golomb_level_decode	src/cabac.c	/^unsigned int unary_exp_golomb_level_decode( DecodingEnvironmentPtr dep_dp,$/;"	f
unary_exp_golomb_mv_decode	src/cabac.c	/^unsigned int unary_exp_golomb_mv_decode(DecodingEnvironmentPtr dep_dp,$/;"	f
uninit_out_buffer	src/output.c	/^void uninit_out_buffer()$/;"	f
unmark_for_long_term_reference	src/mbuffer.c	/^static void unmark_for_long_term_reference(FrameStore* fs)$/;"	f	file:
unmark_for_reference	src/mbuffer.c	/^static void unmark_for_reference(FrameStore* fs)$/;"	f	file:
unmark_long_term_field_for_reference_by_frame_idx	src/mbuffer.c	/^static void unmark_long_term_field_for_reference_by_frame_idx(PictureStructure structure, int long_term_frame_idx, int mark_current, unsigned curr_frame_num, int curr_pic_num)$/;"	f	file:
unmark_long_term_frame_for_reference_by_frame_idx	src/mbuffer.c	/^static void unmark_long_term_frame_for_reference_by_frame_idx(int long_term_frame_idx)$/;"	f	file:
update_ltref_list	src/mbuffer.c	/^void update_ltref_list()$/;"	f
update_ref_list	src/mbuffer.c	/^void update_ref_list()$/;"	f
update_ref_list_for_concealment	src/erc_do_p.c	/^void update_ref_list_for_concealment()$/;"	f
uptr	inc/erc_globals.h	/^  imgpel *uptr;$/;"	m	struct:__anon1
used_for_reference	inc/mbuffer.h	/^  int         used_for_reference;$/;"	m	struct:storable_picture
used_size	inc/mbuffer.h	/^  unsigned      used_size;$/;"	m	struct:decoded_picture_buffer
uv_div	src/erc_do_p.c	/^static int uv_div[2][4] = {{0, 1, 1, 0}, {0, 1, 0, 0}}; \/\/[x\/y][yuv_format]$/;"	v	file:
uvlc_startcode_follows	src/vlc.c	/^int uvlc_startcode_follows(struct img_par *img, int dummy)$/;"	f
v	inc/rtp.h	/^  unsigned int v;          \/\/!< Version, 2 bits, MUST be 0x2$/;"	m	struct:__anon26
vCondition	inc/erc_api.h	/^  int     *vCondition;$/;"	m	struct:ercVariables_s
value1	inc/global.h	/^  int           value1;                \/\/!< numerical value of syntax element$/;"	m	struct:syntaxelement
value2	inc/global.h	/^  int           value2;                \/\/!< for blocked symbols, e.g. run\/level$/;"	m	struct:syntaxelement
vcl_hrd_parameters	inc/parsetcommon.h	/^    hrd_parameters_t vcl_hrd_parameters;                      \/\/ hrd_paramters_t$/;"	m	struct:__anon23
vcl_hrd_parameters_present_flag	inc/parsetcommon.h	/^  Boolean      vcl_hrd_parameters_present_flag;                  \/\/ u(1)$/;"	m	struct:__anon23
video_format	inc/parsetcommon.h	/^    unsigned  video_format;                                   \/\/ u(3)$/;"	m	struct:__anon23
video_full_range_flag	inc/parsetcommon.h	/^    Boolean      video_full_range_flag;                          \/\/ u(1)$/;"	m	struct:__anon23
video_signal_type_present_flag	inc/parsetcommon.h	/^  Boolean      video_signal_type_present_flag;                   \/\/ u(1)$/;"	m	struct:__anon23
vptr	inc/erc_globals.h	/^  imgpel *vptr;$/;"	m	struct:__anon1
vui_parameters_present_flag	inc/parsetcommon.h	/^  Boolean   vui_parameters_present_flag;                      \/\/ u(1)$/;"	m	struct:__anon25
vui_seq_parameters	inc/parsetcommon.h	/^    vui_seq_parameters_t vui_seq_parameters;                  \/\/ vui_seq_parameters_t$/;"	m	struct:__anon25
vui_seq_parameters_t	inc/parsetcommon.h	/^} vui_seq_parameters_t;$/;"	t	typeref:struct:__anon23
wbp_weight	inc/global.h	/^  int ****wbp_weight; \/\/weight in [list][fw_index][bw_index][component] order$/;"	m	struct:img_par
weighted_bipred_idc	inc/parsetcommon.h	/^  unsigned  int weighted_bipred_idc;                              \/\/ u(2)$/;"	m	struct:__anon24
weighted_pred_flag	inc/parsetcommon.h	/^  Boolean   weighted_pred_flag;                               \/\/ u(1)$/;"	m	struct:__anon24
width	inc/global.h	/^  int width;$/;"	m	struct:img_par
width_cr	inc/global.h	/^  int width_cr;                               \/\/!< width chroma$/;"	m	struct:img_par
width_cr_m1	inc/global.h	/^  int width_cr_m1;                               \/\/!< width chroma$/;"	m	struct:img_par
wp_offset	inc/global.h	/^  int ***wp_offset;  \/\/ offset in [list][index][component] order$/;"	m	struct:img_par
wp_round_chroma	inc/global.h	/^  int wp_round_chroma;$/;"	m	struct:img_par
wp_round_luma	inc/global.h	/^  int wp_round_luma;$/;"	m	struct:img_par
wp_weight	inc/global.h	/^  int ***wp_weight;  \/\/ weight in [list][index][component] order$/;"	m	struct:img_par
write	inc/win32.h	30;"	d
write_lost_non_ref_pic	src/erc_do_p.c	/^void write_lost_non_ref_pic(int poc, int p_out)$/;"	f
write_lost_ref_after_idr	src/erc_do_p.c	/^void write_lost_ref_after_idr(int pos)$/;"	f
write_out_picture	src/output.c	/^void write_out_picture(StorablePicture *p, int p_out)$/;"	f
write_picture	src/output.c	/^void write_picture(StorablePicture *p, int p_out, int real_structure)$/;"	f
write_stored_frame	src/output.c	/^void write_stored_frame( FrameStore *fs,int p_out)$/;"	f
write_unpaired_field	src/output.c	/^void write_unpaired_field(FrameStore* fs, int p_out)$/;"	f
write_uv	inc/global.h	/^  int write_uv;$/;"	m	struct:inp_par
x	inc/global.h	/^  int x;$/;"	m	struct:pix_pos
x	inc/rtp.h	/^  unsigned int x;          \/\/!< Extension, MUST be zero$/;"	m	struct:__anon26
xMin	inc/erc_globals.h	/^  int xMin;         \/\/!< X coordinate of the pixel position of the top-left corner of the region$/;"	m	struct:__anon2
xPosMB	inc/erc_api.h	56;"	d
xPosYBlock	inc/erc_api.h	50;"	d
y	inc/global.h	/^  int y;$/;"	m	struct:pix_pos
yCondition	inc/erc_api.h	/^  int     *yCondition;$/;"	m	struct:ercVariables_s
yMin	inc/erc_globals.h	/^  int yMin;         \/\/!< Y coordinate of the pixel position of the top-left corner of the region$/;"	m	struct:__anon2
yPosMB	inc/erc_api.h	59;"	d
yPosYBlock	inc/erc_api.h	53;"	d
yptr	inc/erc_globals.h	/^  imgpel *yptr;$/;"	m	struct:__anon1
yuv_format	inc/global.h	/^  int yuv_format;$/;"	m	struct:img_par
